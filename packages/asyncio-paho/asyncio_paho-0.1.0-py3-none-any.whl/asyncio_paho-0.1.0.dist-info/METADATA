Metadata-Version: 2.1
Name: asyncio-paho
Version: 0.1.0
Summary: A Paho MQTT client supporting asyncio loop without additional setup.
Home-page: https://github.com/toreamun/asyncio-paho
Author: Tore Amundsen
Author-email: tore@amundsen.org
License: UNKNOWN
Keywords: paho,mqtt,asyncio
Platform: UNKNOWN
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: paho-mqtt (~=1.6)

# Asynchronous I/O (asyncio) Paho MQTT client
A [Paho MQTT](https://github.com/eclipse/paho.mqtt.python) client supporting [asyncio](https://docs.python.org/3/library/asyncio.html) loop without additional setup. Forget about configuring the [Paha network-loop](https://github.com/eclipse/paho.mqtt.python#network-loop). The client can almost be used as a drop-in replacement for Paho Client. The asyncio loop is automatically configured when you connect. You should use [connect_async](https://github.com/eclipse/paho.mqtt.python#connect_async) to connect to avoid blocking.



```python
client = AsyncioPahoClient()
client.connect_async("mqtt.eclipseprojects.io")

# do mqtt stuff

client.Disconnect()

```

## Asynchronous Context Manager
The client is an Asynchronous Context Manager and can be used with the Python with statement to atomatically disconnect and clean up.

```python
async with AsyncioPahoClient() as client:
    client.connect_async("mqtt.eclipseprojects.io")
    
    # do mqtt stuff - client.Disconnect() is called when exiting context.

```



