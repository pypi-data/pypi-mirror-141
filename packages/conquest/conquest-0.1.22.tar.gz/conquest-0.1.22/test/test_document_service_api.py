# coding: utf-8

"""
    Conquest API v2

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


# from __future__ import absolute_import

import unittest

import conquest
from conquest.api.document_service_api import DocumentServiceApi  # noqa: E501
from conquest.rest import ApiException
import mimetypes
import datetime
import os

class TestDocumentServiceApi(unittest.TestCase):
    """DocumentServiceApi unit test stubs"""

    def setUp(self):
        self.api = conquest.api.document_service_api.DocumentServiceApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_document_service_add_document(self):
        """Test case for document_service_add_document

        """
        # upload to asset
        print('upload to asset')
        filename = 'test3.csv'
        ext = filename.split('.')[-1]
        mtype, enc = mimetypes.guess_type(filename)
        mtype = 'text/csv' if filename.endswith('.csv') else mtype  # Windows pushes its default excel association
        with open(filename, 'rb', encoding=enc) as f:
            data = f.read()
        prefix = 'blob://default/'
        size = int(os.stat(filename).st_size)
        addr = f"{datetime.now().strftime('%Y%m%d%H%M%S%d')}.{ext}"
        i = 2617
        t = conquest.ConquestApiObjectType.ASSET
        k = conquest.ConquestApiObjectKey(int32_value=i, object_type=t)
        b = conquest.ConquestApiAddDocumentCommand(
            address=addr,
            content_length=size,
            content_type=mtype,
            create_time=datetime.now().strftime('%Y-%m-%dT%H:%M:%S.3%fZ'),
            document_description=filename,
            hashes=None,
            link_existing_document=False,
            object_key=k,
            prefix=prefix,
        )
        print(b)
        print(self.client.configuration.host)
        print(self.client.configuration.api_key)
        print(self.api_host)
        print(self.api_token)
        r = self.api.document_service_add_document(body=b, file=filename)
        print(f'Response: {r}')
        self.assertTrue(str(r.upload_response.status_code).startswith('2'))
        self.assertTrue(len(str(r.document.document_id)) > 0)

        # upload to asset inspection
        print('upload to asset inspection')
        filename = 'test3.csv'
        ext = filename.split('.')[-1]
        mtype, enc = mimetypes.guess_type(filename)
        mtype = 'text/csv' if filename.endswith('.csv') else mtype  # Windows pushes its default excel association
        with open(filename, 'rb', encoding=enc) as f:
            data = f.read()
        prefix = 'blob://default/'
        size = int(os.stat(filename).st_size)
        addr = f"{datetime.now().strftime('%Y%m%d%H%M%S%d')}.{ext}"
        i = 57
        t = conquest.ConquestApiObjectType.ASSETINSPECTION
        k = conquest.ConquestApiObjectKey(int32_value=i, object_type=t)
        b = conquest.ConquestApiAddDocumentCommand(
            address=addr,
            content_length=size,
            content_type=mtype,
            create_time=datetime.now().strftime('%Y-%m-%dT%H:%M:%S.3%fZ'),
            document_description=filename,
            hashes=None,
            link_existing_document=False,
            object_key=k,
            prefix=prefix,
        )
        print(b)
        print(self.client.configuration.host)
        print(self.client.configuration.api_key)
        print(self.api_host)
        print(self.api_token)
        r = self.api.document_service_add_document(body=b, file=filename)
        print(f'Response: {r}')
        self.assertTrue(str(r.upload_response.status_code).startswith('2'))
        self.assertTrue(len(str(r.document.document_id)) > 0)

        
        pass

    def test_document_service_change_document_content(self):
        """Test case for document_service_change_document_content

        """
        pass

    def test_document_service_generate_document_link(self):
        """Test case for document_service_generate_document_link

        """
        pass

    def test_document_service_get_documents(self):
        """Test case for document_service_get_documents

        """
        pass

    def test_document_service_list_document_locations(self):
        """Test case for document_service_list_document_locations

        """
        pass

    def test_document_service_remove_document(self):
        """Test case for document_service_remove_document

        """
        pass


if __name__ == '__main__':
    unittest.main()
