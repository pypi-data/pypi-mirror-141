{"version":3,"file":"vegafusion-wasm_pkg_vegafusion_wasm_js.c3c4e811dfdf0fcb9cfc.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AAC8B;AACI;AACI;AACF;;AAEd;;AAEf;AACP,WAAW,yCAAO;AAClB;;AAEO;AACP;AACA;;AAEA;AACA,iDAAiD,mBAAmB,uBAAuB;;AAE3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,WAAW,uDAAW;AACtB;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA,WAAW,uDAAW;AACtB;;AAEO;AACP;AACA,4CAA4C,6CAAM;AAClD;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ,sDAAU;AAClB;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,sDAAU;AAClB;AACA;;AAEO;AACP;AACA,sBAAsB,iDAAO;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACO;AACP;AACA;;AAEA;AACA,qCAAqC,sDAAwB;AAC7D;AACA,YAAY,sDAAwB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvKkD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAmN;AAClO;AACe;;AAElD;;AAEA;;AAEA,0BAA0B;;AAE1B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,yEAAyE,mEAAkB;AAC3F,8CAA8C,mEAAkB;AAChE;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,WAAW,cAAc;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,yEAAyE,mEAAkB;AAC3F,8CAA8C,mEAAkB;AAChE;AACA;AACA;;AAEA;;AAEA,oDAAoD,8BAA8B;;AAElF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA;AACA,mBAAmB,IAAI;AACvB;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;AACA;AACA,+BAA+B,KAAK;AACpC,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS,IAAI,YAAY,IAAI,UAAU;AACzD;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,gBAAgB,6EAA4B;;AAE5C,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC,uEAAsB,EAAE,wEAAuB;AACtF;AACA,IAAI,mLAAkI;AACtI;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,SAAS;AACnB,UAAU,QAAQ;AAClB,UAAU,SAAS;AACnB,UAAU,QAAQ;AAClB,UAAU,oBAAoB;AAC9B,UAAU,UAAU;AACpB,YAAY;AACZ;AACO;AACP,2CAA2C,uEAAsB,EAAE,wEAAuB;AAC1F;AACA,cAAc,uEAAsB;AACpC;AACA;;AAEA;AACA,YAAY;AACZ;AACO;AACP;AACA,uBAAuB,qFAAoC;AAC3D,QAAQ,kEAAiB;AACzB;AACA;AACA;AACA,MAAM;AACN,QAAQ,qFAAoC;AAC5C,QAAQ,qEAAoB;AAC5B;AACA;;AAEA;AACA,UAAU,KAAK;AACf,UAAU,QAAQ;AAClB,YAAY;AACZ;AACO;AACP,2CAA2C,uEAAsB,EAAE,wEAAuB;AAC1F;AACA,cAAc,+EAA8B;AAC5C;AACA;;AAEA;AACA;AACA,2EAA2E,mEAAkB;AAC7F,gDAAgD,mEAAkB;AAClE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN,QAAQ,0EAAyB;AACjC;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ,4EAA2B;AACnC;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA,4CAA4C,uEAAsB;AAClE;AACA,QAAQ,yEAAwB;AAChC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,2BAA2B,qFAAoC;AAC/D,YAAY,kFAAiC;AAC7C;AACA;AACA;AACA,UAAU;AACV,YAAY,qFAAoC;AAChD,YAAY,qEAAoB;AAChC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,2BAA2B,qFAAoC;AAC/D,YAAY,kFAAiC;AAC7C;AACA;AACA;AACA,UAAU;AACV,YAAY,qFAAoC;AAChD,YAAY,qEAAoB;AAChC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,2BAA2B,qFAAoC;AAC/D,YAAY,gFAA+B;AAC3C;AACA;AACA;AACA,UAAU;AACV,YAAY,qFAAoC;AAChD,YAAY,qEAAoB;AAChC;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,oBAAoB;AAClC,gBAAgB;AAChB;AACA;AACA,+CAA+C,uEAAsB,EAAE,wEAAuB;AAC9F;AACA,kBAAkB,8EAA6B;AAC/C;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP,IAAI,2GAAc;AAClB;;AAEO;AACP,IAAI,yGAAY;AAChB;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA,sCAAsC,uEAAsB,EAAE,wEAAuB;AACrF;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP,cAAc,0GAAa;AAC3B,sCAAsC,uEAAsB,EAAE,wEAAuB;AACrF;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP,cAAc,2CAAK;AACnB;AACA;;AAEO;AACP,kBAAkB,sCAAI;AACtB;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP,IAAI,yGAAY;AAChB;;AAEO;AACP;AACA;AACA;;AAEO;AACP,IAAI,8GAAiB;AACrB;;AAEO;AACP,IAAI,4GAAe;AACnB;;AAEO;AACP,cAAc,yGAAa;AAC3B,sCAAsC,uEAAsB,EAAE,wEAAuB;AACrF;AACA;AACA;AACA;;AAEO;AACP;AACA,kBAAkB,sHAA0B;AAC5C;AACA,MAAM;AACN,QAAQ,qEAAoB;AAC5B;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA,sCAAsC,uEAAsB,EAAE,wEAAuB;AACrF;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,MAAM;AACN,QAAQ,qEAAoB;AAC5B;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO,yCAAyC;AAChD;AACA;AACA,CAAC;;AAEM,yCAAyC;AAChD;AACA;AACA,CAAC;;AAEM;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO,yCAAyC;AAChD;AACA;AACA,CAAC;;AAEM,2CAA2C;AAClD;AACA;AACA,CAAC;;AAEM,+CAA+C;AACtD;AACA;AACA,CAAC;;AAEM,2CAA2C;AAClD,cAAc,qBAAM;AACpB;AACA,CAAC;;AAEM;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA,sCAAsC,uEAAsB,EAAE,wEAAuB;AACrF;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP,cAAc,4DAAW;AACzB;AACA;;AAEO;AACP;AACA;AACA","sources":["webpack://vegafusion-jupyter/../../vegafusion-wasm/pkg/snippets/vegafusion-wasm-7be8a8f8730f9217/js/vega_utils.js","webpack://vegafusion-jupyter/../../vegafusion-wasm/pkg/vegafusion_wasm.js","webpack://vegafusion-jupyter/../../vegafusion-wasm/pkg/vegafusion_wasm_bg.js"],"sourcesContent":["/*\n * VegaFusion\n * Copyright (C) 2022 Jon Mease\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU Affero General Public\n * License along with this program.\n * If not, see http://www.gnu.org/licenses/.\n */\nimport { version } from \"vega\"\nimport { truthy } from \"vega-util\"\nimport {Handler } from 'vega-tooltip';\nimport * as grpcWeb from 'grpc-web';\n\nimport _ from \"lodash\"\n\nexport function vega_version() {\n    return version\n}\n\nexport function localTimezone() {\n    return Intl.DateTimeFormat().resolvedOptions().timeZone\n}\n\n// JSON Serialize Dates to milliseconds\nObject.defineProperty(Date.prototype, \"toJSON\", {value: function() {return this.getTime()}})\n\nfunction getNestedRuntime(view, scope) {\n    // name is an array that may have leading integer group indices\n    var runtime = view._runtime;\n    for (const index of scope) {\n        runtime = runtime.subcontext[index];\n    }\n    return runtime\n}\n\nfunction lookupSignalOp(view, name, scope) {\n    // name is an array that may have leading integer group indices\n    let parent_runtime = getNestedRuntime(view, scope);\n    return parent_runtime.signals[name];\n}\n\nfunction dataref(view, name, scope) {\n    // name is an array that may have leading integer group indices\n    let parent_runtime = getNestedRuntime(view, scope);\n    return parent_runtime.data[name];\n}\n\nexport function getSignalValue(view, name, scope) {\n    let signal_op = lookupSignalOp(view, name, scope);\n    return _.cloneDeep(signal_op.value)\n}\n\nexport function setSignalValue(view, name, scope, value) {\n    let signal_op = lookupSignalOp(view, name, scope);\n    view.update(signal_op, value);\n}\n\nexport function getDataValue(view, name, scope) {\n    let data_op = dataref(view, name, scope);\n    return _.cloneDeep(data_op.values.value)\n}\n\nexport function setDataValue(view, name, scope, value) {\n    let dataset = dataref(view, name, scope);\n    let changeset = view.changeset().remove(truthy).insert(value)\n    dataset.modified = true;\n    view.pulse(dataset.input, changeset);\n}\n\nexport function addSignalListener(view, name, scope, handler, wait, maxWait) {\n    let signal_op = lookupSignalOp(view, name, scope);\n    let options = {};\n    if (maxWait) {\n        options[\"maxWait\"] = maxWait;\n    }\n\n    return addOperatorListener(\n        view,\n        name,\n        signal_op,\n        _.debounce(handler, wait, options),\n    );\n}\n\nexport function addDataListener(view, name, scope, handler, wait, maxWait) {\n    let dataset = dataref(view, name, scope).values;\n    let options = {};\n    if (maxWait) {\n        options[\"maxWait\"] = maxWait;\n    }\n    return addOperatorListener(\n        view,\n        name,\n        dataset,\n        _.debounce(handler, wait, options),\n    );\n}\n\nexport function setupTooltip(view) {\n    let tooltip_opts = {};\n    let handler = new Handler(tooltip_opts).call;\n    view.tooltip(handler)\n}\n\n// Private helpers from Vega\nfunction findOperatorHandler(op, handler) {\n    const h = (op._targets || [])\n        .filter(op => op._update && op._update.handler === handler);\n    return h.length ? h[0] : null;\n}\n\nfunction addOperatorListener(view, name, op, handler) {\n    let h = findOperatorHandler(op, handler);\n    if (!h) {\n        h = trap(view, () => handler(name, op.value));\n        h.handler = handler;\n        view.on(op, null, h);\n    }\n    return view;\n}\n\nfunction trap(view, fn) {\n    return !fn ? null : function() {\n        try {\n            fn.apply(this, arguments);\n        } catch (error) {\n            view.error(error);\n        }\n    };\n}\n\n// Other utility functions\nexport function make_grpc_send_message_fn(client, hostname) {\n    let send_message_grpc = (send_msg_bytes, receiver) => {\n        let grpc_route = '/services.VegaFusionRuntime/TaskGraphQuery'\n\n        // Make custom MethodDescriptor that does not perform serialization\n        const methodDescriptor = new grpcWeb.MethodDescriptor(\n            grpc_route,\n            grpcWeb.MethodType.UNARY,\n            Uint8Array,\n            Uint8Array,\n            (v) => v,\n            (v) => v,\n        );\n\n        let promise = client.unaryCall(\n            hostname + grpc_route,\n            send_msg_bytes,\n            {},\n            methodDescriptor,\n        );\n        promise.then((response) => {\n            receiver.receive(response)\n        })\n    }\n    return send_message_grpc\n}\n","import * as wasm from \"./vegafusion_wasm_bg.wasm\";\nexport * from \"./vegafusion_wasm_bg.js\";","import { vega_version as vega_version2, localTimezone, make_grpc_send_message_fn as make_grpc_send_message_fn2, setSignalValue, setDataValue, addSignalListener, addDataListener, setupTooltip } from './snippets/vegafusion-wasm-7be8a8f8730f9217/js/vega_utils.js';\nimport { parse, View } from 'vega';\nimport * as wasm from './vegafusion_wasm_bg.wasm';\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nfunction makeMutClosure(arg0, arg1, dtor, f) {\n    const state = { a: arg0, b: arg1, cnt: 1, dtor };\n    const real = (...args) => {\n        // First up with a closure we increment the internal reference\n        // count. This ensures that the Rust closure environment won't\n        // be deallocated while we're invoking it.\n        state.cnt++;\n        const a = state.a;\n        state.a = 0;\n        try {\n            return f(a, state.b, ...args);\n        } finally {\n            if (--state.cnt === 0) {\n                wasm.__wbindgen_export_2.get(state.dtor)(a, state.b);\n\n            } else {\n                state.a = a;\n            }\n        }\n    };\n    real.original = state;\n\n    return real;\n}\nfunction __wbg_adapter_18(arg0, arg1, arg2, arg3) {\n    var ptr0 = passStringToWasm0(arg2, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    wasm._dyn_core__ops__function__FnMut__A_B___Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h44b6a391e4ade6a7(arg0, arg1, ptr0, len0, addHeapObject(arg3));\n}\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n/**\n* @param {Element} element\n* @param {string} spec_str\n* @param {boolean} verbose\n* @param {number} debounce_wait\n* @param {number | undefined} debounce_max_wait\n* @param {Function} send_msg_fn\n* @returns {MsgReceiver}\n*/\nexport function render_vegafusion(element, spec_str, verbose, debounce_wait, debounce_max_wait, send_msg_fn) {\n    var ptr0 = passStringToWasm0(spec_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.render_vegafusion(addHeapObject(element), ptr0, len0, verbose, debounce_wait, !isLikeNone(debounce_max_wait), isLikeNone(debounce_max_wait) ? 0 : debounce_max_wait, addHeapObject(send_msg_fn));\n    return MsgReceiver.__wrap(ret);\n}\n\n/**\n* @returns {string}\n*/\nexport function vega_version() {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.vega_version(retptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* @param {any} client\n* @param {string} hostname\n* @returns {Function}\n*/\nexport function make_grpc_send_message_fn(client, hostname) {\n    var ptr0 = passStringToWasm0(hostname, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.make_grpc_send_message_fn(addHeapObject(client), ptr0, len0);\n    return takeObject(ret);\n}\n\nlet cachegetUint32Memory0 = null;\nfunction getUint32Memory0() {\n    if (cachegetUint32Memory0 === null || cachegetUint32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory0;\n}\n\nfunction getArrayU32FromWasm0(ptr, len) {\n    return getUint32Memory0().subarray(ptr / 4, ptr / 4 + len);\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n/**\n*/\nexport class MsgReceiver {\n\n    static __wrap(ptr) {\n        const obj = Object.create(MsgReceiver.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_msgreceiver_free(ptr);\n    }\n    /**\n    * @param {Uint8Array} bytes\n    */\n    receive(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.msgreceiver_receive(this.ptr, ptr0, len0);\n    }\n    /**\n    * @returns {string}\n    */\n    client_spec_json() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.msgreceiver_client_spec_json(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    server_spec_json() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.msgreceiver_server_spec_json(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    comm_plan_json() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.msgreceiver_comm_plan_json(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @param {string} img_type\n    * @param {number | undefined} scale_factor\n    * @returns {Promise<any>}\n    */\n    to_image_url(img_type, scale_factor) {\n        var ptr0 = passStringToWasm0(img_type, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.msgreceiver_to_image_url(this.ptr, ptr0, len0, !isLikeNone(scale_factor), isLikeNone(scale_factor) ? 0 : scale_factor);\n        return takeObject(ret);\n    }\n}\n\nexport function __wbindgen_object_drop_ref(arg0) {\n    takeObject(arg0);\n};\n\nexport function __wbg_msgreceiver_new(arg0) {\n    var ret = MsgReceiver.__wrap(arg0);\n    return addHeapObject(ret);\n};\n\nexport function __wbg_log_9539b89e3b2388e4(arg0, arg1) {\n    console.log(getStringFromWasm0(arg0, arg1));\n};\n\nexport function __wbg_setSignalValue_da3d818ea510b40c(arg0, arg1, arg2, arg3, arg4, arg5) {\n    setSignalValue(getObject(arg0), getStringFromWasm0(arg1, arg2), getArrayU32FromWasm0(arg3, arg4), takeObject(arg5));\n};\n\nexport function __wbg_setDataValue_efb68a2714885f8f(arg0, arg1, arg2, arg3, arg4, arg5) {\n    setDataValue(getObject(arg0), getStringFromWasm0(arg1, arg2), getArrayU32FromWasm0(arg3, arg4), takeObject(arg5));\n};\n\nexport function __wbg_run_225748bf1790e173(arg0) {\n    getObject(arg0).run();\n};\n\nexport function __wbindgen_json_serialize(arg0, arg1) {\n    const obj = getObject(arg1);\n    var ret = JSON.stringify(obj === undefined ? null : obj);\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport function __wbg_toImageURL_5509edbc6b2e977a(arg0, arg1, arg2, arg3) {\n    var ret = getObject(arg0).toImageURL(getStringFromWasm0(arg1, arg2), arg3);\n    return addHeapObject(ret);\n};\n\nexport function __wbg_localTimezone_5cf6ae3c216ea328(arg0) {\n    var ret = localTimezone();\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport function __wbindgen_json_parse(arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_parse_6b72b788b27befad(arg0) {\n    var ret = parse(takeObject(arg0));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_new_028cf17de51aff60(arg0) {\n    var ret = new View(takeObject(arg0));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_initialize_a8353b0d8d0972b6(arg0, arg1) {\n    getObject(arg0).initialize(takeObject(arg1));\n};\n\nexport function __wbg_hover_a39bfd113c0ce79a(arg0) {\n    getObject(arg0).hover();\n};\n\nexport function __wbg_setupTooltip_d7bb97330f0eaeb1(arg0) {\n    setupTooltip(getObject(arg0));\n};\n\nexport function __wbindgen_object_clone_ref(arg0) {\n    var ret = getObject(arg0);\n    return addHeapObject(ret);\n};\n\nexport function __wbg_addSignalListener_a5e9038b891854bf(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n    addSignalListener(getObject(arg0), getStringFromWasm0(arg1, arg2), getArrayU32FromWasm0(arg3, arg4), takeObject(arg5), arg6, arg7 === 0 ? undefined : arg8);\n};\n\nexport function __wbg_addDataListener_456995b220390fcc(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n    addDataListener(getObject(arg0), getStringFromWasm0(arg1, arg2), getArrayU32FromWasm0(arg3, arg4), takeObject(arg5), arg6, arg7 === 0 ? undefined : arg8);\n};\n\nexport function __wbg_vegaversion_d841aed44b4b676c(arg0) {\n    var ret = vega_version2();\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport function __wbg_makegrpcsendmessagefn_8c78e0b86571e064(arg0, arg1, arg2) {\n    try {\n        var ret = make_grpc_send_message_fn2(takeObject(arg0), getStringFromWasm0(arg1, arg2));\n        return addHeapObject(ret);\n    } finally {\n        wasm.__wbindgen_free(arg1, arg2);\n    }\n};\n\nexport function __wbg_new_693216e109162396() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport function __wbg_stack_0ddaca5d1abfb52f(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport function __wbg_error_09919627ac0992f5(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\nexport function __wbg_instanceof_Window_c4b70662a0d2c5ec(arg0) {\n    var ret = getObject(arg0) instanceof Window;\n    return ret;\n};\n\nexport function __wbg_document_1c64944725c0d81d(arg0) {\n    var ret = getObject(arg0).document;\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n};\n\nexport function __wbg_newnoargs_be86524d73f67598(arg0, arg1) {\n    var ret = new Function(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_call_888d259a5fefc347() { return handleError(function (arg0, arg1) {\n    var ret = getObject(arg0).call(getObject(arg1));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_call_8a893cac80deeb51() { return handleError(function (arg0, arg1, arg2, arg3) {\n    var ret = getObject(arg0).call(getObject(arg1), getObject(arg2), getObject(arg3));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_getTimezoneOffset_d3e5a22a1b7fb1d8(arg0) {\n    var ret = getObject(arg0).getTimezoneOffset();\n    return ret;\n};\n\nexport function __wbg_new0_fd3a3a290b25cdac() {\n    var ret = new Date();\n    return addHeapObject(ret);\n};\n\nexport function __wbg_self_c6fbdfc2918d5e58() { return handleError(function () {\n    var ret = self.self;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_window_baec038b5ab35c54() { return handleError(function () {\n    var ret = window.window;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_globalThis_3f735a5746d41fbd() { return handleError(function () {\n    var ret = globalThis.globalThis;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_global_1bc0b39582740e95() { return handleError(function () {\n    var ret = global.global;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbindgen_is_undefined(arg0) {\n    var ret = getObject(arg0) === undefined;\n    return ret;\n};\n\nexport function __wbg_buffer_397eaa4d72ee94dd(arg0) {\n    var ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_newwithbyteoffsetandlength_4b9b8c4e3f5adbff(arg0, arg1, arg2) {\n    var ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n};\n\nexport function __wbg_new_a7ce447f15ff496f(arg0) {\n    var ret = new Uint8Array(getObject(arg0));\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_debug_string(arg0, arg1) {\n    var ret = debugString(getObject(arg1));\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport function __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nexport function __wbindgen_memory() {\n    var ret = wasm.memory;\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_closure_wrapper1193(arg0, arg1, arg2) {\n    var ret = makeMutClosure(arg0, arg1, 210, __wbg_adapter_18);\n    return addHeapObject(ret);\n};\n\n"],"names":[],"sourceRoot":""}