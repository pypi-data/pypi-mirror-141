{"version":3,"sources":["components/CopyToClipBoard/CopyToClipBoard.tsx","components/CodeBlock/CodeBlock.tsx","services/models/bookmarks/bookmarksAppModel.ts","pages/Bookmarks/components/BookmarkCard/BookmarkCard.tsx","pages/Bookmarks/Bookmarks.tsx","pages/Bookmarks/BookmarksContainer.tsx","config/colors/colors.ts","config/illustrationConfig/illustrationConfig.tsx","assets/illustrations/emptyBookmarks.svg","assets/illustrations/emptySearch.svg","assets/illustrations/exploreData.svg","assets/illustrations/wrongSearch.svg","components/IllustrationBlock/IllustrationBlock.tsx","services/api/apps/appsService.ts","assets/icons/successIcon.svg","assets/icons/errorIcon.svg","components/NotificationContainer/NotificationContainer.tsx","services/api/dashboard/dashboardService.ts","components/AppBar/AppBar.tsx","components/ConfirmModal/ConfirmModal.tsx"],"names":["CopyToClipboard","contentRef","showSuccessDelay","className","React","useState","showCopiedIcon","setShowCopiedIcon","useEffect","setTimeout","onCopy","useCallback","current","navigator","clipboard","writeText","innerText","trim","then","catch","ErrorBoundary","onClick","style","color","fontSize","name","displayName","memo","CodeBlock","code","language","createRef","defaultProps","theme","tokens","getLineProps","getTokenProps","ref","map","line","i","key","token","CopyToClipBoard","bookmarksRequestRef","model","createModel","isLoading","listData","notifyData","getBookmarksData","dashboardService","fetchDashboardsList","call","data","a","appsService","fetchAppsList","detail","exceptionHandler","appsList","item","app","find","appData","id","app_id","select","state","type","setState","onNotificationAdd","notification","Date","now","messages","message","severity","abort","deleteDashboard","getState","newListData","filter","bookmark","bookmarkAppModel","initialize","init","err","destroy","onBookmarkDelete","onBookmarksNotificationDelete","onNotificationDelete","BookmarkIconType","images","params","metrics","scatters","BookmarkCard","description","openModal","setOpenModal","tags","useMemo","val","label","size","weight","component","tint","to","variant","analytics","ANALYTICS_EVENT_KEYS","bookmarks","view","withOnlyIcon","advancedMode","advancedQuery","query","length","tag","index","COLORS","ConfirmModal","open","onCancel","onSubmit","text","icon","title","statusType","confirmBtnText","Bookmarks","AppBar","BusyLoaderWrapper","IllustrationBlock","page","IllustrationsEnum","EmptyBookmarks","NotificationContainer","handleClose","BookmarksContainer","bookmarksData","useModel","pageView","BGColorLighten","Illustrations_List","emptyBookmarks","EmptySearch","emptySearch","ExploreData","exploreData","WrongSearch","wrongSearch","EmptyData","Request_Illustrations","RequestStatusEnum","BadRequest","NotRequested","Ok","Pending","Illustration_Title_Config","runs","href","target","rel","image","Illustration_Content_Config","content","imgLoaded","setImgLoaded","classNames","IllustrationBlock__hidden","onLoad","src","alt","endpoints","APPS","API","get","fetchApp","createApp","reqBody","post","updateApp","put","deleteApp","delete","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Box","mt","Alert","onClose","iconMapping","success","successIconImg","error","errorIconImg","height","DASHBOARD","createDashboard","headers","fetchDashboard","updateDashboard","props","children","aria-labelledby","aria-describedby","PaperProps","elevation","cancelBtnText","autoFocus"],"mappings":"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","file":"static/js/bookmarks.js?version=d119ad7207203c011132","sourcesContent":["import React from 'react';\n\nimport { Icon } from 'components/kit';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\n\nimport { ICopyToClipBoardProps } from 'types/components/CopyToClipBoard/CopyToClipBoard';\n\nfunction CopyToClipboard({\n  contentRef,\n  showSuccessDelay = 1500,\n  className = '',\n}: ICopyToClipBoardProps): React.FunctionComponentElement<ICopyToClipBoardProps> {\n  const [showCopiedIcon, setShowCopiedIcon] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    if (showCopiedIcon) {\n      setTimeout(() => {\n        setShowCopiedIcon(false);\n      }, showSuccessDelay);\n    }\n  }, [showCopiedIcon]);\n\n  const onCopy = React.useCallback(() => {\n    if (contentRef.current && !showCopiedIcon) {\n      navigator.clipboard\n        .writeText(contentRef.current.innerText.trim(''))\n        .then(function () {\n          setShowCopiedIcon(true);\n        })\n        .catch();\n    }\n  }, [contentRef, showCopiedIcon]);\n\n  return (\n    <ErrorBoundary>\n      <span className={className} onClick={onCopy}>\n        {showCopiedIcon ? (\n          <span style={{ color: 'green', fontSize: 12 }}>Copied!</span>\n        ) : (\n          <Icon name='copy' />\n        )}\n      </span>\n    </ErrorBoundary>\n  );\n}\n\nCopyToClipboard.displayName = 'CopyToClipBoard';\n\nexport default React.memo<ICopyToClipBoardProps>(CopyToClipboard);\n","import React from 'react';\n// import AssignmentTurnedInOutlinedIcon from '@material-kit/icons/AssignmentTurnedInOutlined';\nimport Highlight, { defaultProps } from 'prism-react-renderer';\n\nimport theme from 'prism-react-renderer/themes/nightOwlLight';\n\nimport CopyToClipBoard from 'components/CopyToClipBoard/CopyToClipBoard';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\n\nimport { ICodeBlockProps } from 'types/components/CodeBlock/CodeBlock';\n\nimport './CodeBlock.scss';\n\nfunction CodeBlock({\n  code = '',\n  className = '',\n  language = 'python',\n}: ICodeBlockProps): React.FunctionComponentElement<React.ReactNode> {\n  const contentRef = React.createRef<HTMLPreElement>();\n  return (\n    <ErrorBoundary>\n      <div className={`CodeBlock ${className}`}>\n        <Highlight\n          {...defaultProps}\n          theme={theme}\n          code={code.trim()}\n          language={language}\n        >\n          {({ className, style, tokens, getLineProps, getTokenProps }) => (\n            <pre className={className} style={style} ref={contentRef}>\n              {tokens.map((line, i) => (\n                <div key={i} {...getLineProps({ line, key: i })}>\n                  {line.map((token, key) => (\n                    <span key={key} {...getTokenProps({ token, key })} />\n                  ))}\n                </div>\n              ))}\n            </pre>\n          )}\n        </Highlight>\n        <ErrorBoundary>\n          <CopyToClipBoard\n            className='CodeBlock__copy__span'\n            contentRef={contentRef}\n          />\n        </ErrorBoundary>\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default React.memo(CodeBlock);\n","import dashboardService from 'services/api/dashboard/dashboardService';\nimport appsService from 'services/api/apps/appsService';\n\nimport { IBookmarksAppModelState } from 'types/services/models/bookmarks/bookmarksAppModel';\nimport { IBookmarksData } from 'types/pages/bookmarks/Bookmarks';\n\nimport onNotificationAdd from 'utils/app/onNotificationAdd';\nimport exceptionHandler from 'utils/app/exceptionHandler';\nimport onNotificationDelete from 'utils/app/onNotificationDelete';\n\nimport createModel from '../model';\n\nlet bookmarksRequestRef: {\n  call: (exceptionHandler: (detail: any) => void) => Promise<any>;\n  abort: () => void;\n};\n\nconst model = createModel<Partial<IBookmarksAppModelState>>({\n  isLoading: true,\n  listData: [],\n  notifyData: [],\n});\n\nfunction getBookmarksData() {\n  const { call, abort } = dashboardService.fetchDashboardsList();\n  return {\n    call: () =>\n      call().then(async (data: any) => {\n        try {\n          const appsList = await appsService\n            .fetchAppsList()\n            .call((detail: any) => {\n              exceptionHandler({ detail, model: model as any });\n            });\n          const listData = data.map((item: any) => {\n            const app = appsList.find(\n              (appData: any) => appData.id === item.app_id,\n            );\n            return { ...item, select: app.state.select, type: app.type };\n          });\n          model.setState({\n            isLoading: false,\n            listData,\n          });\n        } catch (err: any) {\n          onNotificationAdd({\n            notification: {\n              id: Date.now(),\n              messages: [err.message],\n              severity: 'error',\n            },\n            model: model as any,\n          });\n        }\n        model.setState({ isLoading: false });\n      }),\n\n    abort,\n  };\n}\n\nfunction onBookmarksNotificationDelete(id: number) {\n  onNotificationDelete({ id, model });\n}\n\nasync function onBookmarkDelete(id: string) {\n  try {\n    model.setState({ isLoading: true });\n    await dashboardService.deleteDashboard(id).call((detail: any) => {\n      exceptionHandler({ detail, model });\n    });\n    const listData: IBookmarksData[] | any = model.getState()?.listData;\n    const newListData = [...listData].filter((bookmark) => bookmark.id !== id);\n    model.setState({\n      listData: newListData,\n      isLoading: false,\n    });\n  } catch (err: any) {\n    model.setState({\n      isLoading: false,\n    });\n    onNotificationAdd({\n      notification: {\n        id: Date.now(),\n        messages: [err.message],\n        severity: 'error',\n      },\n      model: model as any,\n    });\n  }\n}\n\nfunction initialize() {\n  model.init();\n  try {\n    bookmarksRequestRef = getBookmarksData();\n    bookmarksRequestRef.call((detail) => {\n      exceptionHandler({ detail, model: model as any });\n      model.setState({\n        isLoading: false,\n      });\n    });\n  } catch (err: any) {\n    onNotificationAdd({\n      notification: {\n        id: Date.now(),\n        messages: [err.message],\n        severity: 'error',\n      },\n      model: model as any,\n    });\n    model.setState({\n      isLoading: false,\n    });\n    bookmarksRequestRef.abort();\n  }\n}\n\nfunction destroy() {\n  bookmarksRequestRef.abort();\n  model.destroy();\n}\nconst bookmarkAppModel = {\n  ...model,\n  initialize,\n  destroy,\n  getBookmarksData,\n  onBookmarkDelete,\n  onBookmarksNotificationDelete,\n};\n\nexport default bookmarkAppModel;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport ConfirmModal from 'components/ConfirmModal/ConfirmModal';\nimport CodeBlock from 'components/CodeBlock/CodeBlock';\nimport { Button, Icon, Badge, Text } from 'components/kit';\nimport { IconName } from 'components/kit/Icon';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\n\nimport COLORS from 'config/colors/colors';\nimport { ANALYTICS_EVENT_KEYS } from 'config/analytics/analyticsKeysMap';\n\nimport * as analytics from 'services/analytics';\n\nimport { IBookmarkCardProps } from 'types/pages/bookmarks/components/BookmarkCard';\n\nimport './BookmarkCard.scss';\n\nconst BookmarkIconType: { [key: string]: IconName } = {\n  images: 'images',\n  params: 'params',\n  metrics: 'metrics',\n  scatters: 'scatterplot',\n};\n\nfunction BookmarkCard({\n  name,\n  id,\n  app_id,\n  description,\n  onBookmarkDelete,\n  select,\n  type,\n}: IBookmarkCardProps): React.FunctionComponentElement<React.ReactNode> {\n  const [openModal, setOpenModal] = React.useState<boolean>(false);\n\n  function handleOpenModal(): void {\n    setOpenModal(true);\n  }\n  function handleCloseModal(): void {\n    setOpenModal(false);\n  }\n\n  function handleBookmarkDelete(): void {\n    onBookmarkDelete(id);\n  }\n\n  const tags: { label: string }[] = React.useMemo(() => {\n    return select[type]?.map((val: any) => ({ label: val.label })) || [];\n  }, [select]);\n\n  return (\n    <ErrorBoundary>\n      <div className='BookmarkCard'>\n        <div className='BookmarkCard__top'>\n          <div className='BookmarkCard__title__section'>\n            <div className='BookmarkCard__title__section__container'>\n              <Icon name={BookmarkIconType[type]} fontSize={16} />\n              <Text size={18} weight={600} component='h3' tint={100}>\n                {name}\n              </Text>\n            </div>\n            <div className='flex fac fjc'>\n              <NavLink to={`/${type}/${app_id}`}>\n                <Button\n                  variant='outlined'\n                  onClick={() =>\n                    analytics.trackEvent(ANALYTICS_EVENT_KEYS.bookmarks.view)\n                  }\n                >\n                  View Bookmark\n                </Button>\n              </NavLink>\n              <span className='BookmarkCard__delete'>\n                <Button\n                  color='secondary'\n                  withOnlyIcon\n                  onClick={handleOpenModal}\n                >\n                  <Icon name='delete' />\n                </Button>\n              </span>\n            </div>\n          </div>\n          <Text size={12} weight={400} tint={100} component='p'>\n            {description}\n          </Text>\n        </div>\n        {select.advancedMode ? (\n          <div className='BookmarkCard__bottom'>\n            <div className='BookmarkCard__run__expression'>\n              <CodeBlock code={select.advancedQuery} />\n            </div>\n          </div>\n        ) : (\n          <>\n            {select.query && (\n              <div className='BookmarkCard__bottom'>\n                <div className='BookmarkCard__run__expression'>\n                  <CodeBlock code={select.query} />\n                </div>\n              </div>\n            )}\n            {tags.length > 0 && (\n              <div className='BookmarkCard__selected__metrics ScrollBar__hidden'>\n                {tags.map((tag, index) => {\n                  return (\n                    <Badge\n                      size='large'\n                      key={tag.label}\n                      label={tag.label}\n                      color={COLORS[0][index % COLORS[0].length]}\n                    />\n                  );\n                })}\n              </div>\n            )}\n          </>\n        )}\n        <ConfirmModal\n          open={openModal}\n          onCancel={handleCloseModal}\n          onSubmit={handleBookmarkDelete}\n          text='Are you sure you want to delete this bookmark?'\n          icon={<Icon name='delete' />}\n          title='Are you sure?'\n          statusType='error'\n          confirmBtnText='Delete'\n        />\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default BookmarkCard;\n","import React from 'react';\n\nimport AppBar from 'components/AppBar/AppBar';\nimport BusyLoaderWrapper from 'components/BusyLoaderWrapper/BusyLoaderWrapper';\nimport IllustrationBlock from 'components/IllustrationBlock/IllustrationBlock';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\nimport NotificationContainer from 'components/NotificationContainer/NotificationContainer';\n\nimport { IllustrationsEnum } from 'config/illustrationConfig/illustrationConfig';\n\nimport { IBookmarksProps } from 'types/pages/bookmarks/Bookmarks';\n\nimport BookmarkCard from './components/BookmarkCard/BookmarkCard';\n\nimport './Bookmarks.scss';\n\nfunction Bookmarks({\n  data,\n  onBookmarkDelete,\n  isLoading,\n  notifyData,\n  onNotificationDelete,\n}: IBookmarksProps): React.FunctionComponentElement<React.ReactNode> {\n  return (\n    <ErrorBoundary>\n      <section className='Bookmarks'>\n        <AppBar title='Bookmarks' />\n        <div className='Bookmarks__list container'>\n          <BusyLoaderWrapper isLoading={isLoading}>\n            {data?.length > 0 &&\n              data.map((bookmark) => (\n                <BookmarkCard\n                  key={bookmark.id}\n                  {...bookmark}\n                  onBookmarkDelete={onBookmarkDelete}\n                />\n              ))}\n          </BusyLoaderWrapper>\n          {!isLoading && data?.length === 0 ? (\n            <IllustrationBlock\n              size='xLarge'\n              page='bookmarks'\n              type={IllustrationsEnum.EmptyBookmarks}\n              title={'No Bookmarks Yet'}\n            />\n          ) : null}\n        </div>\n      </section>\n      {notifyData?.length > 0 && (\n        <NotificationContainer\n          handleClose={onNotificationDelete}\n          data={notifyData}\n        />\n      )}\n    </ErrorBoundary>\n  );\n}\n\nexport default Bookmarks;\n","import React from 'react';\n\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\n\nimport { ANALYTICS_EVENT_KEYS } from 'config/analytics/analyticsKeysMap';\n\nimport useModel from 'hooks/model/useModel';\n\nimport bookmarkAppModel from 'services/models/bookmarks/bookmarksAppModel';\nimport * as analytics from 'services/analytics';\n\nimport { INotification } from 'types/components/NotificationContainer/NotificationContainer';\n\nimport Bookmarks from './Bookmarks';\n\nfunction BookmarksContainer(): React.FunctionComponentElement<React.ReactNode> {\n  const bookmarksData = useModel(bookmarkAppModel);\n\n  React.useEffect(() => {\n    bookmarkAppModel.initialize();\n    analytics.pageView(ANALYTICS_EVENT_KEYS.bookmarks.pageView);\n    return () => {\n      bookmarkAppModel.destroy();\n    };\n  }, []);\n\n  return (\n    <ErrorBoundary>\n      <Bookmarks\n        data={bookmarksData?.listData!}\n        isLoading={bookmarksData?.isLoading!}\n        onBookmarkDelete={bookmarkAppModel.onBookmarkDelete}\n        notifyData={bookmarksData?.notifyData as INotification[]}\n        onNotificationDelete={bookmarkAppModel.onBookmarksNotificationDelete}\n      />\n    </ErrorBoundary>\n  );\n}\n\nexport default BookmarksContainer;\n","const COLORS: Array<string[]> = [\n  [\n    '#3E72E7',\n    '#18AB6D',\n    '#7A4CE0',\n    '#E149A0',\n    '#E43D3D',\n    '#E8853D',\n    '#0394B4',\n    '#729B1B',\n  ],\n  [\n    '#336699',\n    '#339966',\n    '#993399',\n    '#999966',\n    '#669966',\n    '#663333',\n    '#669999',\n    '#663366',\n    '#666633',\n    '#996666',\n    '#999933',\n    '#669933',\n    '#663399',\n    '#666699',\n    '#993366',\n    '#996633',\n    '#996699',\n    '#339999',\n    '#333366',\n    '#336633',\n    '#333399',\n    '#339933',\n    '#336666',\n    '#FD7272',\n  ],\n];\n\nexport const BGColorLighten = {\n  '#3E72E7': '#ECF1FD',\n  '#18AB6D': '#E8F7F0',\n  '#7A4CE0': '#F2EDFC',\n  '#E149A0': '#FCEDF6',\n  '#E43D3D': '#FCECEC',\n  '#E8853D': '#FEF2E9',\n  '#0394B4': '#E6F4F7',\n  '#729B1B': '#F1F5E8',\n};\n\nexport default COLORS;\n","import emptyBookmarks from 'assets/illustrations/emptyBookmarks.svg';\nimport emptySearch from 'assets/illustrations/emptySearch.svg';\nimport exploreData from 'assets/illustrations/exploreData.svg';\nimport wrongSearch from 'assets/illustrations/wrongSearch.svg';\n\nimport { RequestStatusEnum } from 'config/enums/requestStatusEnum';\n\nenum IllustrationsEnum {\n  EmptyBookmarks = 'emptyBookmarks',\n  EmptySearch = 'emptySearch',\n  ExploreData = 'exploreData',\n  WrongSearch = 'wrongSearch',\n  EmptyData = 'emptyData',\n}\n\nconst Illustrations_List: { [key: string]: string } = {\n  [IllustrationsEnum.EmptyBookmarks]: emptyBookmarks,\n  [IllustrationsEnum.EmptySearch]: emptySearch,\n  [IllustrationsEnum.ExploreData]: exploreData,\n  [IllustrationsEnum.WrongSearch]: wrongSearch,\n  [IllustrationsEnum.EmptyData]: exploreData,\n};\n\nconst Request_Illustrations = {\n  [RequestStatusEnum.BadRequest]: IllustrationsEnum.WrongSearch,\n  [RequestStatusEnum.NotRequested]: IllustrationsEnum.ExploreData,\n  [RequestStatusEnum.Ok]: IllustrationsEnum.EmptySearch,\n  [RequestStatusEnum.Pending]: IllustrationsEnum.ExploreData,\n};\nconst Illustration_Title_Config: { [key: string]: object | any } = {\n  runs: {\n    [IllustrationsEnum.WrongSearch]: 'Incorrect Query',\n    [IllustrationsEnum.EmptySearch]: 'No Results',\n    [IllustrationsEnum.ExploreData]: (\n      <>\n        It’s super easy to search Aim experiments. Just start typing your query\n        in the search bar above.\n        <br />\n        Look up\n        <a\n          className='qlAnchor'\n          href='https://aimstack.readthedocs.io/en/stable/quick_start/QL_basics.html'\n          target='_blank'\n          rel='noreferrer'\n        >\n          search docs\n        </a>\n        to learn more.\n      </>\n    ),\n    [IllustrationsEnum.EmptyData]: <span>You don't have any tracked runs</span>,\n  },\n  metrics: {\n    [IllustrationsEnum.WrongSearch]: 'Incorrect Query',\n    [IllustrationsEnum.EmptySearch]: 'No Results',\n    [IllustrationsEnum.ExploreData]: (\n      <>\n        It’s super easy to search Aim experiments. Just start typing your query\n        in the search bar above.\n        <br />\n        Look up\n        <a\n          className='qlAnchor'\n          href='https://aimstack.readthedocs.io/en/stable/quick_start/QL_basics.html'\n          target='_blank'\n          rel='noreferrer'\n        >\n          search docs\n        </a>\n        to learn more.\n      </>\n    ),\n    [IllustrationsEnum.EmptyData]: (\n      <span>You don't have any tracked metrics</span>\n    ),\n  },\n  params: {\n    [IllustrationsEnum.WrongSearch]: 'Incorrect Query',\n    [IllustrationsEnum.EmptySearch]: 'No Results',\n    [IllustrationsEnum.ExploreData]: (\n      <>\n        It’s super easy to search Aim experiments. Just start typing your query\n        in the search bar above.\n        <br />\n        Look up\n        <a\n          className='qlAnchor'\n          href='https://aimstack.readthedocs.io/en/stable/quick_start/QL_basics.html'\n          target='_blank'\n          rel='noreferrer'\n        >\n          search docs\n        </a>\n        to learn more.\n      </>\n    ),\n    [IllustrationsEnum.EmptyData]: <span>You don't have any tracked runs</span>,\n  },\n  image: {\n    [IllustrationsEnum.WrongSearch]: 'Incorrect Query',\n    [IllustrationsEnum.EmptySearch]: 'No Results',\n    [IllustrationsEnum.ExploreData]: (\n      <>\n        It’s super easy to search Aim experiments. Just start typing your query\n        in the search bar above.\n        <br />\n        Look up\n        <a\n          className='qlAnchor'\n          href='https://aimstack.readthedocs.io/en/stable/quick_start/QL_basics.html'\n          target='_blank'\n          rel='noreferrer'\n        >\n          search docs\n        </a>\n        to learn more.\n      </>\n    ),\n    [IllustrationsEnum.EmptyData]: (\n      <span>You don't have any tracked metrics</span>\n    ),\n  },\n\n  scatters: {\n    [IllustrationsEnum.WrongSearch]: 'Incorrect Query',\n    [IllustrationsEnum.EmptySearch]: 'No Results',\n    [IllustrationsEnum.ExploreData]: (\n      <>\n        It’s super easy to search Aim experiments. Just start typing your query\n        in the search bar above.\n        <br />\n        Look up\n        <a\n          className='qlAnchor'\n          href='https://aimstack.readthedocs.io/en/stable/quick_start/QL_basics.html'\n          target='_blank'\n          rel='noreferrer'\n        >\n          search docs\n        </a>\n        to learn more.\n      </>\n    ),\n    [IllustrationsEnum.EmptyData]: <span>You don't have any tracked runs</span>,\n  },\n  bookmarks: {\n    [IllustrationsEnum.EmptyData]: 'No Bookmarks Yet',\n  },\n  tags: {\n    [IllustrationsEnum.EmptySearch]: 'No Results',\n    [IllustrationsEnum.ExploreData]: <span>You don't have any tags</span>,\n  },\n};\n\nconst Illustration_Content_Config: { [key: string]: object | any } = {\n  runs: {\n    [IllustrationsEnum.EmptyData]: '',\n  },\n  metrics: {\n    [IllustrationsEnum.EmptyData]: '',\n    //     (\n    //     <CodeBlock\n    //       code={`run_inst = aim.Run(experiment='my_exp_name')\n    //\n    // # Save inputs, hparams or any other \\`key: value\\` pairs\n    // run_inst['hparams'] = {\n    //     'learning_rate': 0.01,\n    //     'batch_size': 32,\n    // }\n    //\n    // # Track metrics\n    // for step in range(10):\n    //     run_inst.track(metric_value, name='metric_name', epoch=epoch_number)\n    // `}\n    //     />\n    //   ),\n  },\n  params: {\n    [IllustrationsEnum.EmptyData]: '',\n    //       (\n    //       <CodeBlock\n    //         code={`run_inst = aim.Run(experiment='my_exp_name')\n    //\n    // # Save inputs, hparams or any other \\`key: value\\` pairs\n    // run_inst['hparams'] = {\n    //     'learning_rate': 0.01,\n    //     'batch_size': 32,\n    // }\n    //\n    // # Track metrics\n    // for step in range(10):\n    //     run_inst.track(metric_value, name='metric_name', epoch=epoch_number)\n    // `}\n    //       />\n    //     ),\n  },\n  image: {\n    [IllustrationsEnum.EmptyData]: '',\n    //       (\n    //       <CodeBlock\n    //         code={`run_inst = aim.Run(experiment='my_exp_name')\n    //\n    // # Save inputs, hparams or any other \\`key: value\\` pairs\n    // run_inst['hparams'] = {\n    //     'learning_rate': 0.01,\n    //     'batch_size': 32,\n    // }\n    //\n    // # Track metrics\n    // for step in range(10):\n    //     run_inst.track(metric_value, name='metric_name', epoch=epoch_number)\n    // `}\n    //       />\n    //     ),\n  },\n  scatters: {\n    [IllustrationsEnum.EmptyData]: '',\n    //       (\n    //       <CodeBlock\n    //         code={`run_inst = aim.Run(experiment='my_exp_name')\n    //\n    // # Save inputs, hparams or any other \\`key: value\\` pairs\n    // run_inst['hparams'] = {\n    //     'learning_rate': 0.01,\n    //     'batch_size': 32,\n    // }\n    //\n    // # Track metrics\n    // for step in range(10):\n    //     run_inst.track(metric_value, name='metric_name', epoch=epoch_number)\n    // `}\n    //       />\n    //     ),\n  },\n  bookmarks: {},\n  tags: {},\n};\n\nexport {\n  IllustrationsEnum,\n  Illustrations_List,\n  Illustration_Content_Config,\n  Illustration_Title_Config,\n  Request_Illustrations,\n};\n","export default __webpack_public_path__ + \"static/media/emptyBookmarks.152e881a.svg\";","export default __webpack_public_path__ + \"static/media/emptySearch.4ea9d27c.svg\";","export default __webpack_public_path__ + \"static/media/exploreData.2f845128.svg\";","export default __webpack_public_path__ + \"static/media/wrongSearch.3ae717c3.svg\";","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Text } from 'components/kit';\n\nimport {\n  IllustrationsEnum,\n  Illustration_Title_Config,\n  Illustration_Content_Config,\n  Illustrations_List,\n} from 'config/illustrationConfig/illustrationConfig';\n\nimport { IIllustrationBlockProps } from 'types/components/IllustrationBlock/IllustrationBlock';\n\nimport './IllustrationBlock.scss';\n\nfunction IllustrationBlock({\n  title,\n  content,\n  image,\n  page = 'metrics',\n  type = IllustrationsEnum.ExploreData,\n  className = '',\n  size = 'small',\n}: IIllustrationBlockProps): React.FunctionComponentElement<React.ReactNode> {\n  const [imgLoaded, setImgLoaded] = React.useState(false);\n\n  function onImgLoad() {\n    setImgLoaded(true);\n  }\n\n  return (\n    <div\n      className={classNames(`IllustrationBlock ${className}`, {\n        IllustrationBlock__hidden: !imgLoaded,\n      })}\n    >\n      <div>\n        <div className={`IllustrationBlock__${size}__img`}>\n          {image || (\n            <img\n              onLoad={onImgLoad}\n              src={Illustrations_List[type]}\n              alt='Illustration image'\n            />\n          )}\n        </div>\n        <Text\n          component='p'\n          className={`IllustrationBlock__title IllustrationBlock__${size}__title`}\n        >\n          {title || Illustration_Title_Config[page][type]}\n        </Text>\n      </div>\n\n      {content ? (\n        <Text\n          component='p'\n          className={`IllustrationBlock__content IllustrationBlock__${size}__content`}\n        >\n          {content}\n        </Text>\n      ) : (\n        Illustration_Content_Config[page][type]\n      )}\n    </div>\n  );\n}\n\nexport default React.memo(IllustrationBlock);\n","import { IAppData } from 'types/services/models/metrics/metricsAppModel';\nimport { IApiRequest } from 'types/services/services';\n\nimport API from '../api';\n\nconst endpoints = {\n  APPS: 'apps',\n};\n\nfunction fetchAppsList(): IApiRequest<IAppData[]> {\n  return API.get(endpoints.APPS);\n}\n\nfunction fetchApp(id: string): IApiRequest<IAppData> {\n  return API.get(`${endpoints.APPS}/${id}`);\n}\n\nfunction createApp(reqBody: IAppData): IApiRequest<IAppData> {\n  return API.post(endpoints.APPS, reqBody);\n}\n\nfunction updateApp(id: string, reqBody: IAppData): IApiRequest<IAppData> {\n  return API.put(`${endpoints.APPS}/${id}`, reqBody);\n}\n\nfunction deleteApp(id: string): IApiRequest<any> {\n  return API.delete(`${endpoints.APPS}/${id}`);\n}\nconst appsService = {\n  endpoints,\n  fetchAppsList,\n  fetchApp,\n  createApp,\n  updateApp,\n  deleteApp,\n};\n\nexport default appsService;\n","export default __webpack_public_path__ + \"static/media/successIcon.bd3fad23.svg\";","export default __webpack_public_path__ + \"static/media/errorIcon.09cae82c.svg\";","import React from 'react';\n\nimport { Alert } from '@material-ui/lab';\nimport { Box, Snackbar } from '@material-ui/core';\n\nimport successIconImg from 'assets/icons/successIcon.svg';\nimport errorIconImg from 'assets/icons/errorIcon.svg';\n\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\n\nimport { INotificationContainer } from 'types/components/NotificationContainer/NotificationContainer';\n\nimport './NotificationContainer.scss';\n\nexport default function NotificationContainer({\n  data,\n  handleClose,\n}: INotificationContainer): React.FunctionComponentElement<React.ReactNode> {\n  return (\n    <ErrorBoundary>\n      <div>\n        <Snackbar\n          open={true}\n          autoHideDuration={3000}\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        >\n          <div className='NotificationContainer'>\n            {data.map(({ id, severity, messages }) => (\n              <Box key={id} mt={0.5}>\n                <Alert\n                  onClose={() => handleClose(+id)}\n                  variant='outlined'\n                  severity={severity}\n                  iconMapping={{\n                    success: <img src={successIconImg} alt='' />,\n                    error: <img src={errorIconImg} alt='' />,\n                  }}\n                  style={{ height: 'auto' }}\n                >\n                  <div className='NotificationContainer__contentBox'>\n                    <p className='NotificationContainer__contentBox__severity'>\n                      {severity}\n                    </p>\n                    {messages.map((message: string, i: number) => (\n                      <p\n                        key={i}\n                        className='NotificationContainer__contentBox__message'\n                      >\n                        {message}\n                      </p>\n                    ))}\n                  </div>\n                </Alert>\n              </Box>\n            ))}\n          </div>\n        </Snackbar>\n      </div>\n    </ErrorBoundary>\n  );\n}\n","import {\n  IAppData,\n  IDashboardRequestBody,\n} from 'types/services/models/metrics/metricsAppModel';\nimport { IApiRequest } from 'types/services/services';\n\nimport API from '../api';\n\nconst endpoints = {\n  DASHBOARD: 'dashboards',\n};\n\nfunction fetchDashboardsList(): IApiRequest<any> {\n  return API.get(endpoints.DASHBOARD);\n}\n\nfunction fetchDashboard(id: string): IApiRequest<any> {\n  return API.get(`${endpoints.DASHBOARD}/${id}`);\n}\n\nfunction createDashboard(\n  reqBody: IDashboardRequestBody,\n): IApiRequest<IAppData> {\n  return API.post(endpoints.DASHBOARD, reqBody, {\n    headers: { 'Content-type': 'application/json' },\n  });\n}\n\nfunction updateDashboard(\n  id: string,\n  reqBody: IDashboardRequestBody,\n): IApiRequest<any> {\n  return API.put(`${endpoints.DASHBOARD}/${id}`, reqBody);\n}\n\nfunction deleteDashboard(id: string): IApiRequest<any> {\n  return API.delete(`${endpoints.DASHBOARD}/${id}`);\n}\n\nconst dashboardService = {\n  endpoints,\n  createDashboard,\n  fetchDashboardsList,\n  fetchDashboard,\n  updateDashboard,\n  deleteDashboard,\n};\n\nexport default dashboardService;\n","import React from 'react';\n\nimport { Text } from 'components/kit';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\n\nimport { IAppBarProps } from 'types/components/AppBar/AppBar';\n\nimport './AppBar.scss';\n\nfunction AppBar(\n  props: IAppBarProps,\n): React.FunctionComponentElement<React.ReactNode> {\n  return (\n    <ErrorBoundary>\n      <div className='AppBar'>\n        <Text\n          component='h3'\n          weight={600}\n          size={14}\n          tint={100}\n          className='AppBar__title'\n        >\n          {props.title}\n        </Text>\n        {props.children && (\n          <div className={`AppBar__content ${props.className || ''}`}>\n            {props.children}\n          </div>\n        )}\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default AppBar;\n","import React from 'react';\n\nimport { Dialog } from '@material-ui/core';\n\nimport { Button, Text, Icon } from 'components/kit';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\n\nimport { IConfirmModalProps } from 'types/components/ConfirmModal/ConfirmModal';\n\nimport './ConfirmModal.scss';\n\nfunction ConfirmModal(\n  props: IConfirmModalProps,\n): React.FunctionComponentElement<React.ReactNode> {\n  return (\n    <ErrorBoundary>\n      <Dialog\n        open={props.open}\n        onClose={props.onCancel}\n        aria-labelledby='dialog-title'\n        aria-describedby='dialog-description'\n        PaperProps={{\n          elevation: 10,\n        }}\n        className={`ConfirmModal ConfirmModal__${props.statusType}`}\n      >\n        <div className='ConfirmModal__Body'>\n          <Button\n            size='small'\n            className='ConfirmModal__Close__Icon'\n            color='secondary'\n            withOnlyIcon\n            onClick={props.onCancel}\n          >\n            <Icon name='close' />\n          </Button>\n\n          <div className='ConfirmModal__Title__Container'>\n            <div className='ConfirmModal__Icon'>{props.icon}</div>\n            {props.title && (\n              <Text size={16} tint={100} component='h4' weight={600}>\n                {props.title}\n              </Text>\n            )}\n          </div>\n\n          <div>\n            {props.text && (\n              <Text\n                size={14}\n                className='ConfirmModal__description'\n                weight={400}\n                component='p'\n                id='dialog-description'\n              >\n                {props.title}\n              </Text>\n            )}\n\n            <div>\n              {props.text && (\n                <Text\n                  className='ConfirmModal__description'\n                  weight={400}\n                  component='p'\n                  id='dialog-description'\n                >\n                  {props.text || ''}\n                </Text>\n              )}\n              {props.children && props.children}\n            </div>\n          </div>\n        </div>\n\n        <div className='ConfirmModal__Footer'>\n          <Button\n            onClick={props.onCancel}\n            className='ConfirmModal__CancelButton'\n          >\n            {props.cancelBtnText}\n          </Button>\n          <Button\n            onClick={props.onSubmit}\n            color='primary'\n            variant='contained'\n            className='ConfirmModal__ConfirmButton'\n            autoFocus\n          >\n            {props.confirmBtnText}\n          </Button>\n        </div>\n      </Dialog>\n    </ErrorBoundary>\n  );\n}\n\nConfirmModal.defaultProps = {\n  confirmBtnText: 'Confirm',\n  cancelBtnText: 'Cancel',\n  statusType: 'info',\n};\n\nConfirmModal.displayName = 'ConfirmModal';\n\nexport default React.memo<IConfirmModalProps>(ConfirmModal);\n"],"sourceRoot":""}