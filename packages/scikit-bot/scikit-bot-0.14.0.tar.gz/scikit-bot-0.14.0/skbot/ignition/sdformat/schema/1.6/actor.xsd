<xs:schema xmlns:types="sdformat/v1.6/types.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:link="sdformat/v1.6/link.xsd" xmlns:joint="sdformat/v1.6/joint.xsd" targetNamespace="sdformat/v1.6/actor.xsd" version="1.1">
  <xs:import namespace="sdformat/v1.6/joint.xsd" schemaLocation="./joint.xsd"/>
  <xs:import namespace="sdformat/v1.6/link.xsd" schemaLocation="./link.xsd"/>
  <xs:import namespace="sdformat/v1.6/types.xsd" schemaLocation="./types.xsd"/>
  <xs:complexType name="actor">
    <xs:annotation>
      <xs:documentation xml:lang="en">A special kind of model which can have a scripted motion. This includes both global waypoint type animations and skeleton animations.</xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="static" minOccurs="1" maxOccurs="1" default="true" type="xs:boolean">
        <xs:annotation>
          <xs:documentation xml:lang="en">(DEPRECATION WARNING: This is deprecated in 1.6 and removed in 1.7. Actors should be static, so this is always true.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="skin" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation xml:lang="en">Skin file which defines a visual and the underlying skeleton which moves it.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:annotation>
            <xs:documentation xml:lang="en">Skin file which defines a visual and the underlying skeleton which moves it.</xs:documentation>
          </xs:annotation>
          <xs:all>
            <xs:element name="filename" minOccurs="1" maxOccurs="1" default="__default__" type="xs:string">
              <xs:annotation>
                <xs:documentation xml:lang="en">Path to skin file, accepted formats: COLLADA, BVH.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="scale" minOccurs="1" maxOccurs="1" default="1.0" type="xs:double">
              <xs:annotation>
                <xs:documentation xml:lang="en">Scale the skin's size.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:all>
        </xs:complexType>
      </xs:element>
      <xs:element name="animation" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation xml:lang="en">Animation file defines an animation for the skeleton in the skin. The skeleton must be compatible with the skin skeleton.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:annotation>
            <xs:documentation xml:lang="en">Animation file defines an animation for the skeleton in the skin. The skeleton must be compatible with the skin skeleton.</xs:documentation>
          </xs:annotation>
          <xs:all>
            <xs:element name="filename" minOccurs="1" maxOccurs="1" default="__default__" type="xs:string">
              <xs:annotation>
                <xs:documentation xml:lang="en">Path to animation file. Accepted formats: COLLADA, BVH.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="scale" minOccurs="1" maxOccurs="1" default="1.0" type="xs:double">
              <xs:annotation>
                <xs:documentation xml:lang="en">Scale for the animation skeleton.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="interpolate_x" minOccurs="1" maxOccurs="1" default="false" type="xs:boolean">
              <xs:annotation>
                <xs:documentation xml:lang="en">Set to true so the animation is interpolated on X.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:all>
          <xs:attribute name="name" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation xml:lang="en">Unique name for animation.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
      <xs:element name="script" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation xml:lang="en">Adds scripted trajectories to the actor.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:annotation>
            <xs:documentation xml:lang="en">Adds scripted trajectories to the actor.</xs:documentation>
          </xs:annotation>
          <xs:all>
            <xs:element name="loop" minOccurs="1" maxOccurs="1" default="true" type="xs:boolean">
              <xs:annotation>
                <xs:documentation xml:lang="en">Set this to true for the script to be repeated in a loop. For a fluid continuous motion, make sure the last waypoint matches the first one.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="delay_start" minOccurs="1" maxOccurs="1" default="0.0" type="xs:double">
              <xs:annotation>
                <xs:documentation xml:lang="en">This is the time to wait before starting the script. If running in a loop, this time will be waited before starting each cycle.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="auto_start" minOccurs="1" maxOccurs="1" default="true" type="xs:boolean">
              <xs:annotation>
                <xs:documentation xml:lang="en">Set to true if the animation should start as soon as the simulation starts playing. It is useful to set this to false if the animation should only start playing only when triggered by a plugin, for example.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="trajectory" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation xml:lang="en">The trajectory contains a series of keyframes to be followed.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:annotation>
                  <xs:documentation xml:lang="en">The trajectory contains a series of keyframes to be followed.</xs:documentation>
                </xs:annotation>
                <xs:all>
                  <xs:element name="waypoint" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">Each point in the trajectory.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:annotation>
                        <xs:documentation xml:lang="en">Each point in the trajectory.</xs:documentation>
                      </xs:annotation>
                      <xs:all>
                        <xs:element name="time" minOccurs="1" maxOccurs="1" default="0.0" type="xs:double">
                          <xs:annotation>
                            <xs:documentation xml:lang="en">The time in seconds, counted from the beginning of the script, when the pose should be reached.</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                        <xs:element name="pose" minOccurs="1" maxOccurs="1" default="0 0 0 0 0 0" type="types:pose">
                          <xs:annotation>
                            <xs:documentation xml:lang="en">The pose which should be reached at the given time.</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                      </xs:all>
                    </xs:complexType>
                  </xs:element>
                </xs:all>
                <xs:attribute name="id" type="xs:int" use="required">
                  <xs:annotation>
                    <xs:documentation xml:lang="en">Unique id for a trajectory.</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="type" type="xs:string" use="required">
                  <xs:annotation>
                    <xs:documentation xml:lang="en">If it matches the type of an animation, they will be played at the same time.</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="tension" type="xs:double" use="optional" default="0.0">
                  <xs:annotation>
                    <xs:documentation xml:lang="en">The tension of the trajectory spline. The default value of zero equates to a Catmull-Rom spline, which may also cause the animation to overshoot keyframes. A value of one will cause the animation to stick to the keyframes.</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
          </xs:all>
        </xs:complexType>
      </xs:element>
      <xs:element name="frame" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation xml:lang="en">A frame of reference to which a pose is relative.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:annotation>
            <xs:documentation xml:lang="en">A frame of reference to which a pose is relative.</xs:documentation>
          </xs:annotation>
          <xs:all>
            <xs:element name="pose" minOccurs="1" maxOccurs="1" default="0 0 0 0 0 0">
              <xs:annotation>
                <xs:documentation xml:lang="en">A position(x,y,z) and orientation(roll, pitch yaw) with respect to the specified frame.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="types:pose">
                    <xs:attribute name="frame" type="xs:string" use="optional">
                      <xs:annotation>
                        <xs:documentation xml:lang="en">Name of frame which the pose is defined relative to.</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:all>
          <xs:attribute name="name" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation xml:lang="en">Name of the frame. This name must not match another frame defined inside the parent that this frame is attached to.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
      <xs:element name="pose" minOccurs="1" maxOccurs="1" default="0 0 0 0 0 0">
        <xs:annotation>
          <xs:documentation xml:lang="en">A position(x,y,z) and orientation(roll, pitch yaw) with respect to the specified frame.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="types:pose">
              <xs:attribute name="frame" type="xs:string" use="optional">
                <xs:annotation>
                  <xs:documentation xml:lang="en">Name of frame which the pose is defined relative to.</xs:documentation>
                </xs:annotation>
              </xs:attribute>
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="link" minOccurs="0" maxOccurs="unbounded" type="link:link">
        <xs:annotation>
          <xs:documentation xml:lang="en">A physical link with inertia, collision, and visual properties. A link must be a child of a model, and any number of links may exist in a model.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="joint" minOccurs="0" maxOccurs="unbounded" type="joint:joint">
        <xs:annotation>
          <xs:documentation xml:lang="en">A joint connects two links with kinematic and dynamic properties. By default, the pose of a joint is expressed in the child link frame.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="plugin" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation xml:lang="en">A plugin is a dynamically loaded chunk of code. It can exist as a child of world, model, and sensor.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:annotation>
            <xs:documentation xml:lang="en">A plugin is a dynamically loaded chunk of code. It can exist as a child of world, model, and sensor.</xs:documentation>
          </xs:annotation>
          <xs:all>
            <xs:any processContents="skip" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation xml:lang="en">This is a special element that should not be specified in an SDFormat file. It automatically copies child elements into the SDFormat element so that a plugin can access the data.</xs:documentation>
              </xs:annotation>
            </xs:any>
          </xs:all>
          <xs:attribute name="name" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation xml:lang="en">A unique name for the plugin, scoped to its parent.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="filename" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation xml:lang="en">Name of the shared library to load. If the filename is not a full path name, the file will be searched for in the configuration paths.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
    </xs:all>
    <xs:attribute name="name" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation xml:lang="en">A unique name for the actor.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
</xs:schema>
