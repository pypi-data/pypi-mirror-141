(self.webpackChunkjupyter_scatter=self.webpackChunkjupyter_scatter||[]).push([[847],{847:(e,s,t)=>{"use strict";t.r(s),t.d(s,{globalPubSub:()=>b,createPubSub:()=>l,default:()=>h});const n=(()=>{try{return new window.BroadcastChannel("pub-sub-es")}catch(e){return{postMessage:()=>{}}}})(),a=(e,s)=>s?e.toLowerCase():e,c=(e,{caseInsensitive:s}={})=>(t,n,c=1/0)=>{const i=a(t,s);return e[i]||(e[i]=[],e.__times__[i]=[]),e[i].push(n),e.__times__[i].push(+c||1/0),{event:i,handler:n}},i=(e,{caseInsensitive:s}={})=>(t,n)=>{"object"==typeof t&&(n=t.handler,t=t.event);const c=a(t,s);if(!e[c])return;const i=e[c].indexOf(n);-1===i||i>=e[c].length||(e[c].splice(i,1),e.__times__[c].splice(i,1))},_=(e,s)=>()=>{e.forEach((e=>e(s)))},o=(e,{isGlobal:s,caseInsensitive:t,async:c}={})=>{const o=i(e);return(i,r,l={})=>{const u=a(i,t);if(!e[u])return;const b=[...e[u]];if(b.forEach(((s,t)=>{--e.__times__[u][t]<1&&o(u,s)})),c||l.async?setTimeout(_(b,r),0):_(b,r)(),s&&!l.isNoGlobalBroadcast)try{n.postMessage({event:u,news:r})}catch(e){if(!(e instanceof DOMException))throw e;console.warn(`Could not broadcast '${u}' globally. Payload is not clonable.`)}}},r=e=>()=>{Object.keys(e).filter((e=>"_"!==e[0])).forEach((s=>{e[s]=void 0,e.__times__[s]=void 0,delete e[s],delete e.__times__[s]}))},l=({async:e=!1,caseInsensitive:s=!1,stack:t={__times__:{}}}={})=>(t.__times__||(t.__times__={}),{publish:o(t,{async:e,caseInsensitive:s}),subscribe:c(t,{caseInsensitive:s}),unsubscribe:i(t,{caseInsensitive:s}),clear:r(t),stack:t}),u={__times__:{}},b={publish:o(u,{isGlobal:!0}),subscribe:c(u),unsubscribe:i(u),stack:u};n.onmessage=({data:{event:e,news:s}})=>b.publish(e,s,!0);const h=l}}]);