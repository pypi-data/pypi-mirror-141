Metadata-Version: 2.1
Name: orbipatch
Version: 2022.3.6.1
Summary: silly project named after a niche math thing
Home-page: https://github.com/moshez/pyproject-only-example
Author-email: Moshe Zadka <orbipatch-author@devskillup.com>
License: Permission is hereby granted, free of charge, to any person obtaining a
        copy of this software and associated documentation files (the "Software"),
        to deal in the Software without restriction, including without limitation the
        rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is furnished
        to do so, subject to the following conditions:        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
        INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
        PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
        HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
        CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
        OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.        
Project-URL: Home-Page, https://github.com/moshez/pyproject-only-example
Project-URL: Issues, https://github.com/moshez/pyproject-only-example/issues
Platform: UNKNOWN
Description-Content-Type: text/x-rst

Packaging example with no setup.cfg
===================================

.. image:: https://badge.fury.io/py/orbipatch.png
    :target: https://badge.fury.io/py/orbipatch

This example follows the guidelines in the
`request for testing`_
in order to test a
*minimal*
example.
It is probably not useful as additional testing data:
people have tested minimal examples.

.. _request for testing: https://discuss.python.org/t/help-testing-experimental-features-in-setuptools/13821

It does,
however,
show how this looks in practice,
at least for a simple package.
After cloning the repository,
build with

.. code::

    $ python -m build
    ...
    Successfully built orbipatch-2022.3.6.tar.gz and orbipatch-2022.3.6-py3-none-any.whl
    
Note the lack of any
"boilerplate"
files other than:

* The README (you are reading it right now)
* :code:`pyproject.toml`

In principle,
the README itself could also be embedded into
:code:`pyproject.toml`.
However,
having a README at the top
helps GitHub
(and most other version control servers)
display a nice explanation
when people see the project in a browser.

A few notes:

The
:code:`authors`
field needs to be carefully formatted:

.. code::

    authors = [{name = "Moshe Zadka", email = "orbipatch-author@devskillup.com"}]

It is a TOML
**list**
of
**objects**
(the equivalent to Python
**dicts**)
with the keys:

* :code:`name`
* :code:`email`

The
:code:`project.urls`
section treats the key
:code:`Home-Page`
as a special case,
using it as the
:code:`Home-Page`
metadata.
All other keys are used as
:code:`project_urls`
metadata.


