{"version":3,"sources":["ItemSelector.tsx","index.tsx"],"names":["ItemSelector","state","startAt","props","args","handleClick","side","increment","index","forceBounds","setState","Streamlit","setComponentValue","handleIndexChange","value","Number","render","Arrow","styled","ArrowForwardIosIcon","FlippedArrow","transform","color","disabled","theme","primaryColor","FixedMarginIconButton","IconButton","marginBottom","style","width","dangerouslySetInnerHTML","__html","textColor","display","fontFamily","fontSize","TextField","label","id","defaultValue","type","variant","size","onChange","e","target","marginTop","position","overflow","marginLeft","marginRight","onClick","border","padding","borderRadius","fontWeight","Math","min","max_size","this","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1088efd7.chunk.js","sourcesContent":["import {\n  Streamlit,\n  withStreamlitConnection,\n  StreamlitComponentBase\n} from \"streamlit-component-lib\"\nimport React, { ReactNode} from \"react\"\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport { styled, TextField } from \"@material-ui/core\"\n\ninterface State {\n  startAt: number\n}\n\nclass ItemSelector extends StreamlitComponentBase<State> {\n  public state = {startAt: this.props.args[\"startAt\"]}\n\n  private forceBounds(index: number){\n    let max_size = this.props.args[\"datasetSize\"] - 1\n    if (index < 0){\n      index = 0\n    } else if (index > max_size) {\n      index = max_size\n    }\n    return index\n  }\n\n  private handleClick = (side: string): void => {\n    let increment = this.props.args[\"incrementAmt\"]\n    let index = this.state.startAt\n    if(side === \"left\") {\n      index -= increment\n    } else if (side === \"right\") {\n      index += increment\n    }\n    index = this.forceBounds(index)\n    this.setState(\n      () => ({startAt: index}),\n      () => Streamlit.setComponentValue(this.state.startAt)\n    )\n  }\n\n  private handleIndexChange = (value: string) => {\n    let index = this.forceBounds(Number(value))\n\n    this.setState(\n      () => {\n        return ({startAt: index})\n      },\n      () => Streamlit.setComponentValue(this.state.startAt)\n    )\n  }\n\n  public render = (): ReactNode => {\n\n    const Arrow = styled(ArrowForwardIosIcon)({\n    })\n    const FlippedArrow = styled(ArrowForwardIosIcon)({\n      transform: \"rotate(180deg)\",\n      color: this.props.disabled || this.state.startAt === 0 ? \"#888\" : this.props.theme?.primaryColor\n    })\n    const FixedMarginIconButton = styled(IconButton)({\n      marginBottom: \"10px\",\n      color: this.props.disabled || this.state.startAt + this.props.args[\"incrementAmt\"] > this.props.args[\"datasetSize\"]-1 ? \"#888\" : this.props.theme?.primaryColor\n    })\n\n    return (\n        <div style={{width: \"100%\"}}>\n          <style dangerouslySetInnerHTML={{__html: `\n            .MuiOutlinedInput-notchedOutline {\n              border-color: `+ this.props.theme?.primaryColor +` !important;\n            }\n            .MuiFormLabel-root {\n              color: `+ this.props.theme?.textColor +` !important;\n            }\n            .MuiInputBase-input {\n              color: `+ this.props.theme?.textColor +` !important;\n            }\n            .MuiOutlinedInput-notchedOutline:hover {\n              border-color: `+ this.props.theme?.primaryColor +` !important;\n            }\n            .MuiFormLabel-root:hover {\n              color: `+ this.props.theme?.textColor +` !important;\n            }\n            .MuiInputBase-input:hover {\n              color: `+ this.props.theme?.textColor +` !important;\n            }\n            .MuiOutlinedInput-notchedOutline:focus {\n              border-color: `+ this.props.theme?.primaryColor +` !important;\n            }\n            .MuiFormLabel-root:focus {\n              color: `+ this.props.theme?.textColor +` !important;\n            }\n            .MuiInputBase-input:focus {\n              color: `+ this.props.theme?.textColor +` !important;\n            }\n          `}} />\n          <div style={{width: \"50%\", display: \"inline-block\"}}>\n            <p style={{fontFamily: \"IBM Plex Sans, sans-serif\", fontSize:\"1rem\", color: this.props.theme?.textColor}}>\n              Go to frame #:\n            </p>\n            <TextField\n              label=\"Index\"\n              id=\"outlined-size-small\"\n              defaultValue=\"\"\n              type=\"number\"\n              variant=\"outlined\"\n              size=\"small\"\n              disabled={this.props.disabled}\n              onChange={e => this.handleIndexChange(e.target.value)}\n              style={{\n                marginBottom: \"20px\",\n                marginTop: \"-10px\",\n              }}\n            />\n          </div>\n          <div style={{fontFamily: \"IBM Plex Sans, sans-serif\", width: \"50%\", display: \"inline-block\" }}>\n            <div style={{ color:this.props.theme?.primaryColor, position: \"relative\", width: \"300px\", overflow: \"visible\", display: \"block\", marginLeft: \"auto\", marginRight: \"auto\" }}>\n              <FixedMarginIconButton color=\"inherit\"\n                                     disabled={this.props.disabled || this.state.startAt === 0}\n                                     onClick={() => this.handleClick(\"left\")}\n                                     style={{border: \"1px solid #DDD\", padding: \"2px\", borderRadius:\"5px\", marginRight: \"10px\"}}\n\n              >\n                <FlippedArrow fontSize=\"large\"></FlippedArrow>\n              </FixedMarginIconButton>\n              <h1 style={{ color:\"#666\", fontWeight: \"normal\", display: \"inline-block\" }}>{this.state.startAt} - {Math.min(this.state.startAt + this.props.args[\"incrementAmt\"]-1, this.props.args[\"datasetSize\"] - 1)}</h1>\n              <FixedMarginIconButton color=\"inherit\"\n                                     disabled={this.props.disabled || this.state.startAt + this.props.args[\"incrementAmt\"] > this.props.args[\"datasetSize\"]-1}\n                                     onClick={() => this.handleClick(\"right\")}\n                                     style={{border: \"1px solid #DDD\", padding: \"2px\", borderRadius:\"5px\", marginLeft: \"10px\"}}\n              >\n                <Arrow fontSize=\"large\" />\n              </FixedMarginIconButton>\n            </div>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default withStreamlitConnection(ItemSelector)\n\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport ItemSelector from \"./ItemSelector\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ItemSelector />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}