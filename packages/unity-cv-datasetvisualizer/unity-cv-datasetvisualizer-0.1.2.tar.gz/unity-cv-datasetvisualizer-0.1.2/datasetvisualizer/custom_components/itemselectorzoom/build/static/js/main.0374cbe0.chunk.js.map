{"version":3,"sources":["ItemSelectorZoom.tsx","index.tsx"],"names":["ItemSelectorZoom","state","index","props","args","handleClick","side","forceBounds","setState","Streamlit","setComponentValue","handleIndexChange","value","Number","render","Arrow","styled","ArrowForwardIosIcon","FlippedArrow","transform","color","disabled","theme","primaryColor","FixedMarginIconButton","IconButton","marginBottom","maxSize","style","width","dangerouslySetInnerHTML","__html","textColor","display","fontFamily","fontSize","TextField","label","id","defaultValue","type","variant","size","onChange","e","target","marginTop","position","overflow","marginLeft","marginRight","onClick","border","padding","borderRadius","fontWeight","max_size","this","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0374cbe0.chunk.js","sourcesContent":["import {\n  Streamlit,\n  withStreamlitConnection,\n  StreamlitComponentBase\n} from \"streamlit-component-lib\"\nimport React, { ReactNode} from \"react\"\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport { styled, TextField } from \"@material-ui/core\"\n\ninterface State {\n  index: number\n}\n\nclass ItemSelectorZoom extends StreamlitComponentBase<State> {\n  public state = {index: this.props.args[\"index\"]}\n\n  private forceBounds(index: number){\n    let max_size = this.props.args[\"datasetSize\"] - 1\n    if (index < 0){\n      index = 0\n    } else if (index > max_size) {\n      index = max_size\n    }\n    return index\n  }\n\n  private handleClick = (side: string): void => {\n    let increment = 1\n    let index = this.state.index\n    if(side === \"left\") {\n      index -= increment\n    } else if (side === \"right\") {\n      index += increment\n    }\n    index = this.forceBounds(index)\n    this.setState(\n      () => ({index: index}),\n      () => Streamlit.setComponentValue(this.state.index)\n    )\n  }\n\n  private handleIndexChange = (value: string) => {\n    let index = this.forceBounds(Number(value))\n\n    this.setState(\n      () => {\n        return ({index: index})\n      },\n      () => Streamlit.setComponentValue(this.state.index)\n    )\n  }\n\n  public render = (): ReactNode => {\n\n    const Arrow = styled(ArrowForwardIosIcon)({})\n    const FlippedArrow = styled(ArrowForwardIosIcon)({\n      transform: \"rotate(180deg)\",\n      color: this.props.disabled || this.state.index === 0 ? \"#888\" : this.props.theme?.primaryColor\n    })\n    const FixedMarginIconButton = styled(IconButton)({\n      marginBottom: \"10px\",\n      color: this.props.disabled || this.state.index + 1 === this.props.args[\"datasetSize\"] ? \"#888\" : this.props.theme?.primaryColor\n    })\n    const maxSize = this.props.args[\"datasetSize\"]\n    return (\n        <div style={{width: \"100%\"}}>\n          <style dangerouslySetInnerHTML={{__html: `\n            .MuiOutlinedInput-notchedOutline {\n              border-color: `+ this.props.theme?.primaryColor +` !important;\n            }\n            .MuiFormLabel-root {\n              color: `+ this.props.theme?.textColor +` !important;\n            }\n            .MuiInputBase-input {\n              color: `+ this.props.theme?.textColor +` !important;\n            }\n            .MuiOutlinedInput-notchedOutline:hover {\n              border-color: `+ this.props.theme?.primaryColor +` !important;\n            }\n            .MuiFormLabel-root:hover {\n              color: `+ this.props.theme?.textColor +` !important;\n            }\n            .MuiInputBase-input:hover {\n              color: `+ this.props.theme?.textColor +` !important;\n            }\n            .MuiOutlinedInput-notchedOutline:focus {\n              border-color: `+ this.props.theme?.primaryColor +` !important;\n            }\n            .MuiFormLabel-root:focus {\n              color: `+ this.props.theme?.textColor +` !important;\n            }\n            .MuiInputBase-input:focus {\n              color: `+ this.props.theme?.textColor +` !important;\n            }\n          `}} />\n          <div style={{width: \"50%\", display: \"inline-block\"}}>\n            <p style={{fontFamily: \"\\\"IBM Plex Sans\\\", sans-serif\", fontSize:\"1rem\", color: this.props.theme?.textColor}}>\n              Go to frame #:\n            </p>\n            <TextField\n              label=\"Index\"\n              id=\"outlined-size-small\"\n              defaultValue=\"\"\n              type=\"number\"\n              variant=\"outlined\"\n              size=\"small\"\n              color=\"secondary\"\n              disabled={this.props.disabled}\n              onChange={e => this.handleIndexChange(e.target.value)}\n              style={{\n                marginBottom: \"20px\",\n                marginTop: \"-10px\",\n              }}\n            />\n          </div>\n          <div style={{fontFamily: \"IBM Plex Sans, sans-serif\", width: \"50%\", display: \"inline-block\" }}>\n            <div style={{color:\"#F63366\",  position: \"relative\", width: \"300px\", overflow: \"visible\", display: \"block\", marginLeft: \"auto\", marginRight: \"auto\" }}>\n              <FixedMarginIconButton color=\"inherit\"\n                                     disabled={this.props.disabled || this.state.index === 0}\n                                     onClick={() => this.handleClick(\"left\")}\n                                     style={{border: \"1px solid #DDD\", padding: \"2px\", borderRadius:\"5px\", marginRight: \"10px\"}}\n              >\n                <FlippedArrow fontSize=\"large\" />\n              </FixedMarginIconButton>\n              <h1 style={{ color:\"#666\", fontWeight: \"normal\", display: \"inline-block\" }}>{this.state.index}</h1>\n              <FixedMarginIconButton color=\"inherit\"\n                                     disabled={this.props.disabled || this.state.index + 1 === maxSize}\n                                     onClick={() => this.handleClick(\"right\")}\n                                     style={{border: \"1px solid #DDD\", padding: \"2px\", borderRadius:\"5px\", marginLeft: \"10px\"}}\n              >\n                <Arrow fontSize=\"large\" />\n              </FixedMarginIconButton>\n            </div>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default withStreamlitConnection(ItemSelectorZoom)\n\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport ItemSelectorZoom from \"./ItemSelectorZoom\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ItemSelectorZoom />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}