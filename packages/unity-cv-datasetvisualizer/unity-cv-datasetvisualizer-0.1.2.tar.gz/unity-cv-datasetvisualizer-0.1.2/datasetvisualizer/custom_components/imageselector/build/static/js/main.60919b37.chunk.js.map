{"version":3,"sources":["ImageSelector.tsx","index.tsx"],"names":["ImageSelector","state","index","props","args","handleClick","side","setState","prevState","Streamlit","setComponentValue","render","Arrow","styled","ArrowForwardIosIcon","FlippedArrow","transform","FixedMarginIconButton","IconButton","marginBottom","style","width","position","overflow","display","marginLeft","marginRight","color","disabled","onClick","fontSize","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"mRAeMA,E,4MACGC,MAAQ,CAACC,MAAO,EAAKC,MAAMC,KAAX,O,EAEfC,YAAc,SAACC,GACT,SAATA,EACD,EAAKC,UACH,SAAAC,GAAS,MAAK,CAACN,MAAOM,EAAUN,MAAQ,MACxC,kBAAMO,IAAUC,kBAAkB,EAAKT,MAAMC,UAE7B,UAATI,GACT,EAAKC,UACH,SAAAC,GAAS,MAAK,CAACN,MAAOM,EAAUN,MAAQ,MACxC,kBAAMO,IAAUC,kBAAkB,EAAKT,MAAMC,W,EAK5CS,OAAS,WAEd,IAAMC,EAAQC,YAAOC,IAAPD,CAA4B,IACpCE,EAAeF,YAAOC,IAAPD,CAA4B,CAC/CG,UAAW,mBAEPC,EAAwBJ,YAAOK,IAAPL,CAAmB,CAC/CM,aAAc,SAGhB,OACE,yBAAKC,MAAO,CAAEC,MAAO,SACnB,yBAAKD,MAAO,CAAEE,SAAU,WAAYD,MAAO,QAASE,SAAU,UAAWC,QAAS,QAASC,WAAY,OAAQC,YAAa,SAC1H,kBAACT,EAAD,CAAuBU,MAAM,UACNC,SAAU,EAAKzB,MAAMyB,SACrBC,QAAS,kBAAM,EAAKxB,YAAY,UAErD,kBAACU,EAAD,CAAce,SAAS,WAEzB,wBAAIV,MAAO,CAAEI,QAAS,iBAAmB,EAAKvB,MAAMC,OACpD,kBAACe,EAAD,CAAuBU,MAAM,UACNC,SAAU,EAAKzB,MAAMyB,SACrBC,QAAS,kBAAM,EAAKxB,YAAY,WAErD,kBAACO,EAAD,CAAOkB,SAAS,c,YAzCAC,KAiDbC,cAAwBhC,GC5DvCiC,IAAStB,OACP,kBAAC,IAAMuB,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.60919b37.chunk.js","sourcesContent":["import {\n  Streamlit,\n  withStreamlitConnection,\n  StreamlitComponentBase\n} from \"streamlit-component-lib\"\nimport React, { ReactNode} from \"react\"\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport { styled } from \"@material-ui/core\"\n\n\ninterface State {\n  index: number\n}\n\nclass ImageSelector extends StreamlitComponentBase<State> {\n  public state = {index: this.props.args[\"index\"]}\n\n  private handleClick = (side: string): void => {\n    if(side === \"left\") {\n      this.setState(\n        prevState => ({index: prevState.index - 1}),\n        () => Streamlit.setComponentValue(this.state.index)\n      )\n    } else if (side === \"right\") {\n      this.setState(\n        prevState => ({index: prevState.index + 1}),\n        () => Streamlit.setComponentValue(this.state.index)\n      )\n    }\n  }\n\n  public render = (): ReactNode => {\n\n    const Arrow = styled(ArrowForwardIosIcon)({})\n    const FlippedArrow = styled(ArrowForwardIosIcon)({\n      transform: \"rotate(180deg)\"\n    })\n    const FixedMarginIconButton = styled(IconButton)({\n      marginBottom: \"10px\"\n    })\n\n    return (\n      <div style={{ width: \"100%\" }}>\n        <div style={{ position: \"relative\", width: \"300px\", overflow: \"visible\", display: \"block\", marginLeft: \"auto\", marginRight: \"auto\" }}>\n          <FixedMarginIconButton color=\"primary\"\n                                 disabled={this.props.disabled}\n                                 onClick={() => this.handleClick(\"left\")}\n          >\n            <FlippedArrow fontSize=\"large\" />\n          </FixedMarginIconButton>\n          <h1 style={{ display: \"inline-block\" }}>{this.state.index}</h1>\n          <FixedMarginIconButton color=\"primary\"\n                                 disabled={this.props.disabled}\n                                 onClick={() => this.handleClick(\"right\")}\n          >\n            <Arrow fontSize=\"large\" />\n          </FixedMarginIconButton>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withStreamlitConnection(ImageSelector)\n\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport ImageSelector from \"./ImageSelector\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ImageSelector />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}