Metadata-Version: 2.1
Name: littledoc
Version: 0.0.2
Summary: A small Python code parser which allow to generate a basic documentation
Home-page: https://github.com/jpthiery/littledoc
Author: Jean-Pascal Thiery
License: Apache Software License (http://www.apache.org/licenses/LICENSE-2.0)
Keywords: documentation
Platform: UNKNOWN
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Operating System :: OS Independent
Requires-Python: >=3
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: argparse (==1.4.0)
Requires-Dist: jinja2 (==3.0.1)

Littledoc is a small lib which allow to extract your Python documentation in an easy way.

The following documentation of Littledoc had been generate executing script [doc.py](doc.py)

---
#  littledoc

Small module which allow you to extract your docstring documentation in the format of your choice.

##  parse

```python
def parse(working_path: str, module_name: str, show_private=False) -> dict
```

Parse your code and  docstring then generate a dict with it.





###  Arguments

|Name|Type|Description|
|----|----|-----------|
| `module_name` | str| The name of the module you want to generate dict of your documentation |
| `show_private` | | If True, parser will navigate through your private methode. At False by default. |
| `working_path` | str| The working directory to fetch your module |
###  Return

`dict` : Dictionnary which contain metadata and doc.


##  write

```python
def write(module: dict) -> str
```

Now, allow to generate a single page documentation in markdown using the only on Jinja template available.
The dictionary should be generated by parser.



###  Arguments

|Name|Type|Description|
|----|----|-----------|
| `module` | dict| The dict of your module generated by parser. |
###  Return

`str` : A single page markdown representation of your documentation





