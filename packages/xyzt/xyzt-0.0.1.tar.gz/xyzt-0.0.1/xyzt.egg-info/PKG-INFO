Metadata-Version: 2.1
Name: xyzt
Version: 0.0.1
Summary: Compute and plot timing scalings for functions with numpy array inputs
Home-page: https://github.com/nosarthur/xyzt
Author: Dong Zhou
Author-email: zhou.dong@gmail.com
License: MIT
Keywords: bash
Platform: linux
Platform: osx
Platform: win32
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: POSIX
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Topic :: Utilities
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Requires-Python: ~=3.6
Description-Content-Type: text/markdown
License-File: LICENSE

# xyzt: compute and plot time cost scaling for functions with numpy array input

I often implement functions on atom positions in terms of `Nx3` numpy arrays,
and need to compare speed of different implementations.
This small library is a thin wrapper over `timeit` for that purpose.

```python
xyzt.timethem(functions_to_check, nmin=10, nmax=1e5, number=1e5) -> (n, times)
xyzt.plot(n, times, labels=None)
```

```python
for fi in functions:
    for n in valid_range:
        generate random n-dimensional input vector
        timeit fi(v_rand)
```

## example: `scipy.spatial.distance.cdist+min` versus `scipy.spatial.cKDTree`


