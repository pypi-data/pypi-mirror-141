"use strict";(self.webpackChunkjupyterlab_s3_browser=self.webpackChunkjupyterlab_s3_browser||[]).push([[957],{957:(e,t,n)=>{n.r(t),n.d(t,{default:()=>j});var r=n(831),o=n(705),s=n(283),a=n(511),i=n(168),c=n(826),l=n(22),d=n(526);async function h(e,t){const n=d.ServerConnection.makeSettings();return await(await d.ServerConnection.makeRequest(c.URLExt.join(n.baseUrl,"jupyterlab_s3_browser/files",e),{method:"PUT",body:JSON.stringify({content:t})},n)).json()}async function u(e){const t=d.ServerConnection.makeSettings(),n=await(await d.ServerConnection.makeRequest(c.URLExt.join(t.baseUrl,"jupyterlab_s3_browser/files",e),{method:"GET",headers:{"X-Custom-S3-Is-Dir":"true"}},t)).json();return{type:"directory",path:e.trim(),name:"",format:"json",content:n.map((e=>function(e){return{name:e.name,path:e.path,format:"json",type:e.type,created:"",writable:!1,last_modified:"",mimetype:e.mimetype,content:e.content}}(e))),created:"",writable:!1,last_modified:"",mimetype:""}}var m,p=n(686);class y{constructor(e){this._isDisposed=!1,this._fileChanged=new i.Signal(this),this._registry=e}get name(){return"S3"}get fileChanged(){return this._fileChanged}get isDisposed(){return this._isDisposed}dispose(){this.isDisposed||(this._isDisposed=!0,i.Signal.clearData(this))}async get(e,t){if("file"===t.type){const t=await async function(e){const t=d.ServerConnection.makeSettings();return(await d.ServerConnection.makeRequest(c.URLExt.join(t.baseUrl,"jupyterlab_s3_browser/files",e),{method:"GET"},t)).json()}(e),n=this._registry.getFileTypesForPath(e),r=0===n.length?this._registry.getFileType("text"):n[0],o=r.mimeTypes[0],s=r.fileFormat;let a;switch(s){case"text":a=m.b64DecodeUTF8(t.content);break;case"base64":a=t.content;break;case"json":a=JSON.parse(m.b64DecodeUTF8(t.content));break;default:throw new Error(`Unexpected file format: ${r.fileFormat}`)}return{type:"file",path:e,name:"",format:s,content:a,created:"",writable:!1,last_modified:"",mimetype:o}}return await u(e)}async getDownloadUrl(e){throw await(0,p.showDialog)({title:"Sorry",body:"This feature is not yet implemented.",buttons:[p.Dialog.cancelButton({label:"Cancel"})]}),Error("Not yet implemented")}async newUntitled(e={}){let t;const n="untitled";let r=n;const o=await u(e.path),s=o.content.map((e=>e.name));console.log(o),console.log(s);let a=0;for(;s.includes(r);)a++,r=n+a,console.log(`is ${r} unique?`);switch(e.type){case"file":t=await h(e.path+"/"+r,"");break;case"directory":t=await async function(e){const t=d.ServerConnection.makeSettings();return await(await d.ServerConnection.makeRequest(c.URLExt.join(t.baseUrl,"jupyterlab_s3_browser/files",e),{method:"PUT",headers:{"X-Custom-S3-Is-Dir":"true"}},t)).json(),{type:"directory",path:e.trim(),name:"Untitled",format:"json",content:[],created:"",writable:!1,last_modified:"",mimetype:""}}(e.path+"/"+r);break;default:throw new Error(`Unexpected type: ${e.type}`)}const i=this._registry.getFileTypesForPath(t.path),l=0===i.length?this._registry.getFileType("text"):i[0],m=l.mimeTypes[0],p=l.fileFormat,y={type:e.type,path:e.path,name:r,format:p,content:"",created:"",writable:!1,last_modified:"",mimetype:m};return console.log(e.path),this._fileChanged.emit({type:"new",oldValue:null,newValue:y}),y}async delete(e){await async function(e){const t=d.ServerConnection.makeSettings();await d.ServerConnection.makeRequest(c.URLExt.join(t.baseUrl,"jupyterlab_s3_browser/files",e),{method:"DELETE"},t)}(e),this._fileChanged.emit({type:"delete",oldValue:{path:e},newValue:null})}async rename(e,t){if(!e.includes("/"))throw Error("Renaming of buckets is not supported");return await async function(e,t){console.log(`move ${e} -> ${t}`);const n=d.ServerConnection.makeSettings();return await(await d.ServerConnection.makeRequest(c.URLExt.join(n.baseUrl,"jupyterlab_s3_browser/files",t),{method:"PUT",headers:{"X-Custom-S3-Move-Src":e}},n)).json()}(e,t)}async save(e,t){return await h(e,t.content)}async copy(e,t){let n=c.PathExt.basename(e).split(".")[0];n+="-copy";const r="/"+t+"/"+n+c.PathExt.extname(e),o=await async function(e,t){const n=d.ServerConnection.makeSettings();return await(await d.ServerConnection.makeRequest(c.URLExt.join(n.baseUrl,"jupyterlab_s3_browser/files",t),{method:"PUT",headers:{"X-Custom-S3-Copy-Src":e}},n)).json()}(e,r);return this._fileChanged.emit({type:"new",oldValue:null,newValue:o}),o}async createCheckpoint(e){}async listCheckpoints(e){return[]}async restoreCheckpoint(e,t){throw Error("Not yet implemented")}async deleteCheckpoint(e,t){}}!function(e){const t=new TextDecoder("utf8");e.b64DecodeUTF8=function(e){const n=l.toByteArray(e.replace(/\n/g,""));return t.decode(n)}}(m||(m={}));var w=n(706),b=n(462);let f;class g extends w.Widget{constructor(e,t,n){super(),this.addClass("jp-S3Browser"),this.layout=new w.PanelLayout;const r=()=>{const t=document.querySelector("#s3form"),n=new FormData(t),r={};n.forEach(((e,t)=>{r[t]=e}));const o=d.ServerConnection.makeSettings();d.ServerConnection.makeRequest(c.URLExt.join(o.baseUrl,"jupyterlab_s3_browser/auth"),{method:"POST",body:JSON.stringify(r)},o).then((t=>{t.json().then((t=>{if(t.success)this.layout.removeWidget(f),this.layout.addWidget(e),e.model.refresh();else{let e=t.message;e.includes("InvalidAccessKeyId")?e="The access key ID you entered was invalid.":e.includes("SignatureDoesNotMatch")&&(e="The secret access key you entered was invalid"),(0,p.showErrorMessage)("S3 Authentication Error",Error(e))}}))}))};S.checkIfAuthenicated().then((t=>{t?(this.layout.addWidget(e),setTimeout((()=>{e.model.refresh()}),1e3)):(f=new w.Widget({node:S.createS3AuthenticationForm(r)}),this.layout.addWidget(f))}))}}var S;!function(e){e.createS3AuthenticationForm=function(e){return b.VirtualDOM.realize(b.h.div({className:"s3form"},b.h.h4("S3 Object Storage Browser"),b.h.div("This extension allows you to browse S3-compatible object storage instances, such as AWS S3 and IBM Cloud Object Storage."),b.h.br(),b.h.form({id:"s3form",method:"post"},b.h.p(b.h.label({},"Endpoint URL"),b.h.br(),b.h.input({type:"url",name:"endpoint_url"})),b.h.br(),b.h.p(b.h.label({},"Access Key ID"),b.h.br(),b.h.input({type:"text",name:"client_id"})),b.h.br(),b.h.p(b.h.label({},"Secret Access Key"),b.h.br(),b.h.input({type:"password",name:"client_secret"})),b.h.br(),b.h.p(b.h.label({},"(Optional) Session Token"),b.h.br(),b.h.input({type:"password",name:"session_token"}))),b.h.br(),b.h.p({className:"s3-connect"},b.h.button({onclick:e,className:"jp-mod-accept jp-mod-styled"},"Connect"))))},e.checkIfAuthenicated=function(){return new Promise(((e,t)=>{const n=d.ServerConnection.makeSettings();d.ServerConnection.makeRequest(c.URLExt.join(n.baseUrl,"jupyterlab_s3_browser/auth"),{method:"GET"},n).then((t=>{t.json().then((t=>{e(t.authenticated)}))}))}))}}(S||(S={}));const _="s3-filebrowser",j={id:"jupyterlab_s3_browser:drive",requires:[s.IDocumentManager,a.IFileBrowserFactory,r.ILayoutRestorer,o.ISettingRegistry],activate:function(e,t,n,r,o){const s=new y(e.docRegistry);t.services.contents.addDrive(s);const a=n.createFileBrowser(_,{driveName:s.name,state:null,refreshInterval:3e5}),i=new g(a,s,t);return i.title.iconClass="jp-S3-icon jp-SideBar-tabIcon",i.title.caption="Object Storage Browser",i.id="s3-file-browser",r.add(i,_),void e.shell.add(i,"left",{rank:100})},autoStart:!0}}}]);