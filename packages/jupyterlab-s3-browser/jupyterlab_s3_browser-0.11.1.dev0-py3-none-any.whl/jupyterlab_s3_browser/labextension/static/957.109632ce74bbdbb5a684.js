"use strict";(self.webpackChunkjupyterlab_s3_browser=self.webpackChunkjupyterlab_s3_browser||[]).push([[957],{957:(e,t,n)=>{n.r(t),n.d(t,{default:()=>k});var o=n(831),r=n(705),s=n(283),a=n(511),i=n(168),c=n(826),l=n(22),d=n(526);async function u(e,t){const n=d.ServerConnection.makeSettings();return await(await d.ServerConnection.makeRequest(c.URLExt.join(n.baseUrl,"jupyterlab_s3_browser/files",t),{method:"PUT",headers:{"X-Custom-S3-Src":e}},n)).json()}async function h(e){const t=d.ServerConnection.makeSettings();await d.ServerConnection.makeRequest(c.URLExt.join(t.baseUrl,"jupyterlab_s3_browser/files",e),{method:"DELETE"},t)}async function m(e,t){const n=d.ServerConnection.makeSettings();return await(await d.ServerConnection.makeRequest(c.URLExt.join(n.baseUrl,"jupyterlab_s3_browser/files",e),{method:"PUT",body:JSON.stringify({content:t})},n)).json()}var y,p=n(686);class w{constructor(e){this._isDisposed=!1,this._fileChanged=new i.Signal(this),this._registry=e}get name(){return"S3"}get fileChanged(){return this._fileChanged}get isDisposed(){return this._isDisposed}dispose(){this.isDisposed||(this._isDisposed=!0,i.Signal.clearData(this))}async get(e,t){if("file"===t.type){const t=await async function(e){const t=d.ServerConnection.makeSettings();return(await d.ServerConnection.makeRequest(c.URLExt.join(t.baseUrl,"jupyterlab_s3_browser/files",e),{method:"GET"},t)).json()}(e),n=this._registry.getFileTypesForPath(e),o=0===n.length?this._registry.getFileType("text"):n[0],r=o.mimeTypes[0],s=o.fileFormat;let a;switch(s){case"text":a=y.b64DecodeUTF8(t.content);break;case"base64":a=t.content;break;case"json":a=JSON.parse(y.b64DecodeUTF8(t.content));break;default:throw new Error(`Unexpected file format: ${o.fileFormat}`)}return{type:"file",path:e,name:"",format:s,content:a,created:"",writable:!0,last_modified:"",mimetype:r}}return await async function(e){const t=d.ServerConnection.makeSettings(),n=await(await d.ServerConnection.makeRequest(c.URLExt.join(t.baseUrl,"jupyterlab_s3_browser/files",e),{method:"GET",headers:{"X-Custom-S3-Is-Dir":"true"}},t)).json();return{type:"directory",path:e.trim(),name:"",format:"json",content:n.map((e=>function(e){return{name:e.name,path:e.path,format:"json",type:e.type,created:"",writable:!0,last_modified:"",mimetype:e.mimetype,content:e.content}}(e))),created:"",writable:!0,last_modified:"",mimetype:""}}(e)}async getDownloadUrl(e){throw await(0,p.showDialog)({title:"Sorry",body:"This feature is not yet implemented.",buttons:[p.Dialog.cancelButton({label:"Cancel"})]}),Error("Not yet implemented")}async newUntitled(e={}){let t;const n="Untitled";switch(e.type){case"file":console.log("new untitled file"),t=await m(e.path+"/"+n,"");break;case"directory":console.log("new directory"),t=await async function(e){const t=d.ServerConnection.makeSettings();return await(await d.ServerConnection.makeRequest(c.URLExt.join(t.baseUrl,"jupyterlab_s3_browser/files",e),{method:"PUT",headers:{"X-Custom-S3-Is-Dir":"true"}},t)).json(),{type:"directory",path:e.trim(),name:"Untitled",format:"json",content:[],created:"",writable:!0,last_modified:"",mimetype:""}}(e.path+"/"+n);break;default:throw new Error(`Unexpected type: ${e.type}`)}return this._fileChanged.emit({type:"new",oldValue:null,newValue:t}),t}async delete(e){console.log(`deleting ${e}`),await h(e),console.log(`deleted ${e}`),this._fileChanged.emit({type:"delete",oldValue:{path:e},newValue:null})}async rename(e,t){console.log(`renaming ${e} to ${t}`);const n=await u(e,t);return await h(e),n}async save(e,t){return console.log(e),console.log(t),await m(e,t.content)}async copy(e,t){console.log(`copying from ${e} to ${t}`);let n=c.PathExt.basename(e).split(".")[0];n+="-copy";const o="/"+t+"/"+n+c.PathExt.extname(e);console.log(`new file ${o}`);const r=await u(e,o);return this._fileChanged.emit({type:"new",oldValue:null,newValue:r}),r}async createCheckpoint(e){}async listCheckpoints(e){return[]}async restoreCheckpoint(e,t){throw Error("Not yet implemented")}async deleteCheckpoint(e,t){}}!function(e){const t=new TextDecoder("utf8");e.b64DecodeUTF8=function(e){const n=l.toByteArray(e.replace(/\n/g,""));return t.decode(n)}}(y||(y={}));var b=n(706),f=n(462);let g;class S extends b.Widget{constructor(e,t,n){super(),this.addClass("jp-S3Browser"),this.layout=new b.PanelLayout;const o=()=>{const t=document.querySelector("#s3form"),n=new FormData(t),o={};n.forEach(((e,t)=>{o[t]=e}));const r=d.ServerConnection.makeSettings();d.ServerConnection.makeRequest(c.URLExt.join(r.baseUrl,"jupyterlab_s3_browser/auth"),{method:"POST",body:JSON.stringify(o)},r).then((t=>{t.json().then((t=>{if(t.success)this.layout.removeWidget(g),this.layout.addWidget(e),e.model.refresh();else{let e=t.message;e.includes("InvalidAccessKeyId")?e="The access key ID you entered was invalid.":e.includes("SignatureDoesNotMatch")&&(e="The secret access key you entered was invalid"),(0,p.showErrorMessage)("S3 Authentication Error",Error(e))}}))}))};_.checkIfAuthenicated().then((t=>{t?(this.layout.addWidget(e),setTimeout((()=>{e.model.refresh()}),1e3)):(g=new b.Widget({node:_.createS3AuthenticationForm(o)}),this.layout.addWidget(g))}))}}var _;!function(e){e.createS3AuthenticationForm=function(e){return f.VirtualDOM.realize(f.h.div({className:"s3form"},f.h.h4("S3 Object Storage Browser"),f.h.div("This extension allows you to browse S3-compatible object storage instances, such as AWS S3 and IBM Cloud Object Storage."),f.h.br(),f.h.form({id:"s3form",method:"post"},f.h.p(f.h.label({},"Endpoint URL"),f.h.br(),f.h.input({type:"url",name:"endpoint_url"})),f.h.br(),f.h.p(f.h.label({},"Access Key ID"),f.h.br(),f.h.input({type:"text",name:"client_id"})),f.h.br(),f.h.p(f.h.label({},"Secret Access Key"),f.h.br(),f.h.input({type:"password",name:"client_secret"})),f.h.br(),f.h.p(f.h.label({},"(Optional) Session Token"),f.h.br(),f.h.input({type:"password",name:"session_token"}))),f.h.br(),f.h.p({className:"s3-connect"},f.h.button({onclick:e,className:"jp-mod-accept jp-mod-styled"},"Connect"))))},e.checkIfAuthenicated=function(){return new Promise(((e,t)=>{const n=d.ServerConnection.makeSettings();d.ServerConnection.makeRequest(c.URLExt.join(n.baseUrl,"jupyterlab_s3_browser/auth"),{method:"GET"},n).then((t=>{t.json().then((t=>{e(t.authenticated)}))}))}))}}(_||(_={}));const j="s3-filebrowser",k={id:"jupyterlab_s3_browser:drive",requires:[s.IDocumentManager,a.IFileBrowserFactory,o.ILayoutRestorer,r.ISettingRegistry],activate:function(e,t,n,o,r){const s=new w(e.docRegistry);t.services.contents.addDrive(s);const a=n.createFileBrowser(j,{driveName:s.name,state:null,refreshInterval:3e5}),i=new S(a,s,t);return i.title.iconClass="jp-S3-icon jp-SideBar-tabIcon",i.title.caption="Object Storage Browser",i.id="s3-file-browser",o.add(i,j),void e.shell.add(i,"left",{rank:100})},autoStart:!0}}}]);