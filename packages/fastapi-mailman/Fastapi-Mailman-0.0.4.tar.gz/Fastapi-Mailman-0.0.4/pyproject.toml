[tool.poetry]
name = "Fastapi-Mailman"
version = "0.0.4"
description = "Porting Django's email implementation to your FastAPI applications."
authors = ["Aniket Sarkar <aniketsarkar@yahoo.com>"]
license = "MIT"
readme="README.md"
repository="https://github.com/marktennyson/fastapi-mailman"
keywords=["fastapi", "mail", "smtp", "fastapi-mail"]
exclude = ["docs", "tests*"]
classifiers=[
        "Development Status :: 4 - Beta",
        "Intended Audience :: Developers",
        "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
        "Topic :: Software Development :: Build Tools",
        "Topic :: Communications :: Email",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3.6",
        "Programming Language :: Python :: 3.7",
        "Programming Language :: Python :: 3.8",
        "Programming Language :: Python :: 3.9",
    ]

[tool.poetry.dependencies]
python = "^3.6.2"
fastapi = "~0"
Jinja2 = "~3"
aiosmtplib = "^1.1.6"
pydantic = "~1"
email-validator = "~1"
dnspython = "~2"


black  = { version = "^21.5b2", optional = true}
isort  = { version = "^5.8.0", optional = true}
flake8  = { version = "^3.9.2", optional = true}
pytest  = { version = "^6.2.4", optional = true}
pytest-cov  = { version = "^2.12.0", optional = true}
tox  = { version = "^3.20.1", optional = true}
virtualenv  = { version = "^20.2.2", optional = true}
pip  = { version = "^21.1", optional = true}
mkdocs  = { version = "^1.1.2", optional = true}
mkdocs-include-markdown-plugin  = { version = "^1.0.0", optional = true}
mkdocs-material  = { version = "^6.1.7", optional = true}
mkdocstrings  = { version = "^0.15.2", optional = true}
mkdocs-material-extensions  = { version = "^1.0.1", optional = true}
twine  = { version = "^3.3.0", optional = true}
mkdocs-autorefs = {version = "^0.2.1", optional = true}
pre-commit = {version = "^2.12.0", optional = true}
toml = {version = "^0.10.2", optional = true}
bump2version = {version = "^1.0.1", optional = true}
anyio = {version = "^3.3.2", optional = true}
trio = {version = "^0.19.0", optional = true}

[tool.poetry.extras]
test = [
    "pytest",
    "black",
    "isort",
    "flake8",
    "pytest-cov",
    "anyio",
    "trio"
    ]

dev = ["tox", "pre-commit", "virtualenv", "pip", "twine", "toml", "bump2version"]

doc = [
    "mkdocs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocs-material-extensions",
    "mkdocs-autorefs"
    ]

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py36', 'py37', 'py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
# you can skip files as below
#skip_glob = docs/conf.py

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
