# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import spacesense.common.proto.sentinel1.sentinel1_pb2 as sentinel1__pb2


class Sentinel1BackendStub(object):
    """Sentinel1 service definition."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetS1ARD = channel.unary_stream(
            "/s1_ard.Sentinel1Backend/GetS1ARD",
            request_serializer=sentinel1__pb2.GetS1ArdRequest.SerializeToString,
            response_deserializer=sentinel1__pb2.GetS1ArdReply.FromString,
        )


class Sentinel1BackendServicer(object):
    """Sentinel1 service definition."""

    def GetS1ARD(self, request, context):
        """S1_ARD service definition."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_Sentinel1BackendServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "GetS1ARD": grpc.unary_stream_rpc_method_handler(
            servicer.GetS1ARD,
            request_deserializer=sentinel1__pb2.GetS1ArdRequest.FromString,
            response_serializer=sentinel1__pb2.GetS1ArdReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler("s1_ard.Sentinel1Backend", rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class Sentinel1Backend(object):
    """Sentinel1 service definition."""

    @staticmethod
    def GetS1ARD(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_stream(
            request,
            target,
            "/s1_ard.Sentinel1Backend/GetS1ARD",
            sentinel1__pb2.GetS1ArdRequest.SerializeToString,
            sentinel1__pb2.GetS1ArdReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
